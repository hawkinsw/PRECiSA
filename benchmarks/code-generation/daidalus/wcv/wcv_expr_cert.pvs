% This file is automatically generated by PRECiSA 

wcv_expr_cert: THEORY
BEGIN
IMPORTING float@extended_float_converter, PRECiSA@strategies, PRECiSA@bbiasp, PRECiSA@bbiadp

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

tcoa_expr_1 : LEMMA
FORALL(sz: double, vz: double, e_sz, e_vz: nonneg_real, r_sz, r_vz: real):
abs(safe_prjct_double(sz)-r_sz)<=e_sz AND abs(safe_prjct_double(vz)-r_vz)<=e_vz
AND (TRUE)
IMPLIES
abs(safe_prjct_double(mul_double(sz, vz)) - (r_sz * r_vz)) <= aebounddp_mul(r_sz, e_sz, r_vz, e_vz)

%|- tcoa_1: PROOF
%|- (precisa)
%|- QED


tcoa_expr_num_1 : LEMMA
FORALL(sz: double, vz: double, r_sz, r_vz: real):
abs(safe_prjct_double(sz) - r_sz)<=ulp_dp(r_sz)/2 AND abs(safe_prjct_double(vz) - r_vz)<=ulp_dp(r_vz)/2
AND (TRUE)
AND r_sz ## [|1,1000|] AND  r_vz ## [|1,1000|]
IMPLIES
abs(safe_prjct_double(mul_double(sz, vz)) - (r_sz * r_vz)) <=6649846324789249 / 38685626227668133590597632

%|- tcoa_c_1 : PROOF
%|- (prove-concrete-lemma tcoa_expr_1 14 7)
%|- QED

tcpa_expr_1 : LEMMA
FORALL(vx: double, vy: double, e_vx, e_vy: nonneg_real, r_vx, r_vy: real):
abs(safe_prjct_double(vx)-r_vx)<=e_vx AND abs(safe_prjct_double(vy)-r_vy)<=e_vy
AND (TRUE)
IMPLIES
abs(safe_prjct_double(add_double(mul_double(vx, vx), mul_double(vy, vy))) - ((r_vx * r_vx) + (r_vy * r_vy))) <= aebounddp_add((r_vx * r_vx), aebounddp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aebounddp_mul(r_vy, e_vy, r_vy, e_vy))

%|- tcpa_1: PROOF
%|- (precisa)
%|- QED


tcpa_expr_num_1 : LEMMA
FORALL(vx: double, vy: double, r_vx, r_vy: real):
abs(safe_prjct_double(vx) - r_vx)<=ulp_dp(r_vx)/2 AND abs(safe_prjct_double(vy) - r_vy)<=ulp_dp(r_vy)/2
AND (TRUE)
AND r_vx ## [|1,1000|] AND  r_vy ## [|1,1000|]
IMPLIES
abs(safe_prjct_double(add_double(mul_double(vx, vx), mul_double(vy, vy))) - ((r_vx * r_vx) + (r_vy * r_vy))) <=8901646138474497 / 19342813113834066795298816

%|- tcpa_c_1 : PROOF
%|- (prove-concrete-lemma tcpa_expr_1 14 7)
%|- QED

taumod_expr_1 : LEMMA
FORALL(sx: double, vx: double, sy: double, vy: double, e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real):
abs(safe_prjct_double(sx)-r_sx)<=e_sx AND abs(safe_prjct_double(vx)-r_vx)<=e_vx AND abs(safe_prjct_double(sy)-r_sy)<=e_sy AND abs(safe_prjct_double(vy)-r_vy)<=e_vy
AND (TRUE)
IMPLIES
abs(safe_prjct_double(add_double(mul_double(sx, vx), mul_double(sy, vy))) - ((r_sx * r_vx) + (r_sy * r_vy))) <= aebounddp_add((r_sx * r_vx), aebounddp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aebounddp_mul(r_sy, e_sy, r_vy, e_vy))

%|- taumod_1: PROOF
%|- (precisa)
%|- QED


taumod_expr_num_1 : LEMMA
FORALL(sx: double, vx: double, sy: double, vy: double, r_sx, r_vx, r_sy, r_vy: real):
abs(safe_prjct_double(sx) - r_sx)<=ulp_dp(r_sx)/2 AND abs(safe_prjct_double(vx) - r_vx)<=ulp_dp(r_vx)/2 AND abs(safe_prjct_double(sy) - r_sy)<=ulp_dp(r_sy)/2 AND abs(safe_prjct_double(vy) - r_vy)<=ulp_dp(r_vy)/2
AND (TRUE)
AND r_sx ## [|1,1000|] AND  r_vx ## [|1,1000|] AND  r_sy ## [|1,1000|] AND  r_vy ## [|1,1000|]
IMPLIES
abs(safe_prjct_double(add_double(mul_double(sx, vx), mul_double(sy, vy))) - ((r_sx * r_vx) + (r_sy * r_vy))) <=8901646138474497 / 19342813113834066795298816

%|- taumod_c_1 : PROOF
%|- (prove-concrete-lemma taumod_expr_1 14 7)
%|- QED


END wcv_expr_cert