% This file is automatically generated by PRECiSA 

first_quadrant_expr_cert: THEORY
BEGIN
IMPORTING float@extended_float_converter, PRECiSA@strategies, PRECiSA@bbiasp, PRECiSA@bbiadp

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

quadrant_expr_1 : LEMMA
FORALL(X: double, e_X: nonneg_real, r_X: real):
abs(safe_prjct_double(X)-r_X)<=e_X
AND (TRUE)
IMPLIES
abs(safe_prjct_double(X) - r_X) <= e_X

%|- quadrant_1: PROOF
%|- (precisa)
%|- QED


quadrant_expr_num_1 : LEMMA
FORALL(X: double, r_X: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (TRUE)
AND r_X ## [|-60000,60000|]
IMPLIES
abs(safe_prjct_double(X) - r_X) <=1 / 274877906944

%|- quadrant_c_1 : PROOF
%|- (prove-concrete-lemma quadrant_expr_1 14 7)
%|- QED

quadrant_expr_2 : LEMMA
FORALL(Y: double, e_Y: nonneg_real, r_Y: real):
abs(safe_prjct_double(Y)-r_Y)<=e_Y
AND (TRUE)
IMPLIES
abs(safe_prjct_double(Y) - r_Y) <= e_Y

%|- quadrant_2: PROOF
%|- (precisa)
%|- QED


quadrant_expr_num_2 : LEMMA
FORALL(Y: double, r_Y: real):
abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2
AND (TRUE)
AND r_Y ## [|-10000,10000|]
IMPLIES
abs(safe_prjct_double(Y) - r_Y) <=1 / 1099511627776

%|- quadrant_c_2 : PROOF
%|- (prove-concrete-lemma quadrant_expr_2 14 7)
%|- QED


END first_quadrant_expr_cert