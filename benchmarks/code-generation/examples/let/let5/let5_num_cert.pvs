% This file is automatically generated by PRECiSA 

% maxDepth: 7 , prec: 10^-14

let5_num_cert: THEORY
BEGIN
IMPORTING cert_let5, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: 1, 2, 3, 4
% Real Results: 1, 2, 3, 4
% Control Flow:  Stable
quadrant_fp_c_0 : LEMMA
FORALL(r_X, r_Y: real, X: double, Y: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2 AND abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2
AND (((((r_X <= 0) AND (0 <= r_Y)) AND NOT(((0 <= r_X) AND (0 <= r_Y)))) AND (((X <= integerToDouble(0)) AND (integerToDouble(0) <= Y)) AND NOT(((integerToDouble(0) <= X) AND (integerToDouble(0) <= Y))))) OR ((NOT((r_X <= 0)) AND (NOT(((r_X <= 0) AND (0 <= r_Y))) AND NOT(((0 <= r_X) AND (0 <= r_Y))))) AND (NOT((X <= integerToDouble(0))) AND (NOT(((X <= integerToDouble(0)) AND (integerToDouble(0) <= Y))) AND NOT(((integerToDouble(0) <= X) AND (integerToDouble(0) <= Y)))))) OR (((0 <= r_X) AND (0 <= r_Y)) AND ((integerToDouble(0) <= X) AND (integerToDouble(0) <= Y))) OR (((r_X <= 0) AND (NOT(((r_X <= 0) AND (0 <= r_Y))) AND NOT(((0 <= r_X) AND (0 <= r_Y))))) AND ((X <= integerToDouble(0)) AND (NOT(((X <= integerToDouble(0)) AND (integerToDouble(0) <= Y))) AND NOT(((integerToDouble(0) <= X) AND (integerToDouble(0) <= Y)))))))
AND r_X ## [|-60000,60000|] AND  r_Y ## [|-10000,10000|]
IMPLIES
abs(quadrant_fp(X, Y) - quadrant(r_X, r_Y))<=0 / 1

%|- quadrant_fp_c_0 : PROOF
%|- (prove-concrete-lemma quadrant_fp_0 14 7)
%|- QED

quadrant_fp_err_0 : LEMMA
FORALL(r_X, r_Y: real, X: double, Y: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2 AND abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2
AND (((((r_X <= 0) AND (0 <= r_Y)) AND NOT(((0 <= r_X) AND (0 <= r_Y)))) AND (((X <= integerToDouble(0)) AND (integerToDouble(0) <= Y)) AND NOT(((integerToDouble(0) <= X) AND (integerToDouble(0) <= Y))))) OR ((NOT((r_X <= 0)) AND (NOT(((r_X <= 0) AND (0 <= r_Y))) AND NOT(((0 <= r_X) AND (0 <= r_Y))))) AND (NOT((X <= integerToDouble(0))) AND (NOT(((X <= integerToDouble(0)) AND (integerToDouble(0) <= Y))) AND NOT(((integerToDouble(0) <= X) AND (integerToDouble(0) <= Y)))))) OR (((0 <= r_X) AND (0 <= r_Y)) AND ((integerToDouble(0) <= X) AND (integerToDouble(0) <= Y))) OR (((r_X <= 0) AND (NOT(((r_X <= 0) AND (0 <= r_Y))) AND NOT(((0 <= r_X) AND (0 <= r_Y))))) AND ((X <= integerToDouble(0)) AND (NOT(((X <= integerToDouble(0)) AND (integerToDouble(0) <= Y))) AND NOT(((integerToDouble(0) <= X) AND (integerToDouble(0) <= Y)))))))
AND r_X ## [|-60000,60000|] AND  r_Y ## [|-10000,10000|]
IMPLIES
max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=1
                            IN LET P:int=1
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=1
                                                  IN LET P:int=1
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_0 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_0 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_0 14 7)
%|- QED

winding_number_contrib_fp_err_0 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=1,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=1,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=1
                            IN LET P:int=2
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=1
                                                  IN LET P:int=2
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_1 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_1 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_1 14 7)
%|- QED

winding_number_contrib_fp_err_1 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=1,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=2,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=1
                            IN LET P:int=3
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=1
                                                  IN LET P:int=3
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_2 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_2 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_2 14 7)
%|- QED

winding_number_contrib_fp_err_2 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=1,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=3,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=1
                            IN LET P:int=4
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=1
                                                  IN LET P:int=4
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_3 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_3 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_3 14 7)
%|- QED

winding_number_contrib_fp_err_3 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=1,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=4,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=2
                            IN LET P:int=1
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=2
                                                  IN LET P:int=1
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_4 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_4 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_4 14 7)
%|- QED

winding_number_contrib_fp_err_4 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=2,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=1,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=2
                            IN LET P:int=2
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=2
                                                  IN LET P:int=2
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_5 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_5 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_5 14 7)
%|- QED

winding_number_contrib_fp_err_5 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=2,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=2,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=2
                            IN LET P:int=3
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=2
                                                  IN LET P:int=3
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_6 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_6 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_6 14 7)
%|- QED

winding_number_contrib_fp_err_6 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=2,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=3,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=2
                            IN LET P:int=4
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=2
                                                  IN LET P:int=4
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_7 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_7 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_7 14 7)
%|- QED

winding_number_contrib_fp_err_7 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=2,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=4,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=3
                            IN LET P:int=1
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=3
                                                  IN LET P:int=1
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_8 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_8 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_8 14 7)
%|- QED

winding_number_contrib_fp_err_8 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=3,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=1,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=3
                            IN LET P:int=2
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=3
                                                  IN LET P:int=2
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_9 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_9 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_9 14 7)
%|- QED

winding_number_contrib_fp_err_9 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=3,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=2,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=3
                            IN LET P:int=3
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=3
                                                  IN LET P:int=3
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_10 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_10 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_10 14 7)
%|- QED

winding_number_contrib_fp_err_10 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=3,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=3,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=3
                            IN LET P:int=4
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=3
                                                  IN LET P:int=4
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_11 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_11 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_11 14 7)
%|- QED

winding_number_contrib_fp_err_11 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=3,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=4,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=4
                            IN LET P:int=1
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=4
                                                  IN LET P:int=1
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_12 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_12 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_12 14 7)
%|- QED

winding_number_contrib_fp_err_12 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=4,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=1,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=4
                            IN LET P:int=2
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=4
                                                  IN LET P:int=2
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_13 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_13 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_13 14 7)
%|- QED

winding_number_contrib_fp_err_13 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=4,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=2,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=4
                            IN LET P:int=3
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=4
                                                  IN LET P:int=3
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_14 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_14 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_14 14 7)
%|- QED

winding_number_contrib_fp_err_14 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=4,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=3,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: LET THIS_x:double=sub_double(P_V1_x, S_x)
                          IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                             IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                   IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                      IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                         IN -2, LET THIS_x:double=sub_double(P_V1_x, S_x)
                                                IN LET THIS_y:double=sub_double(P_V1_y, S_y)
                                                   IN LET NEXT_x:double=sub_double(P_V2_x, S_x)
                                                      IN LET NEXT_y:double=sub_double(P_V2_y, S_y)
                                                         IN LET K:int=quadrant_fp(THIS_x, THIS_y)
                                                            IN LET P:int=quadrant_fp(NEXT_x, NEXT_y)
                                                               IN 0
% Real Results: LET THIS_x:real=(r_P_V1_x - r_S_x)
                IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                   IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                      IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                         IN LET K:int=4
                            IN LET P:int=4
                               IN -2, LET THIS_x:real=(r_P_V1_x - r_S_x)
                                      IN LET THIS_y:real=(r_P_V1_y - r_S_y)
                                         IN LET NEXT_x:real=(r_P_V2_x - r_S_x)
                                            IN LET NEXT_y:real=(r_P_V2_y - r_S_y)
                                               IN LET K:int=4
                                                  IN LET P:int=4
                                                     IN 0
% Control Flow:  Stable
winding_number_contrib_fp_c_15 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_15 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_15 14 7)
%|- QED

winding_number_contrib_fp_err_15 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: double, P_V1_y: double, P_V2_x: double, P_V2_y: double, S_x: double, S_y: double):
abs(safe_prjct_double(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(safe_prjct_double(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(safe_prjct_double(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(safe_prjct_double(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(safe_prjct_double(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(safe_prjct_double(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND ((((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))))) AND (((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))))) OR (((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))))) AND (((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))))) OR ((NOT(((r_P_V1_x - r_S_x) <= 0)) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND (NOT((sub_double(P_V1_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((NOT(((r_P_V2_x - r_S_x) <= 0)) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND (NOT((sub_double(P_V2_x, S_x) <= integerToDouble(0))) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR ((((r_P_V1_x - r_S_x) <= 0) AND (NOT((((r_P_V1_x - r_S_x) <= 0) AND (0 <= (r_P_V1_y - r_S_y)))) AND NOT(((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y)))))) AND ((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V1_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y))))))) OR ((((r_P_V2_x - r_S_x) <= 0) AND (NOT((((r_P_V2_x - r_S_x) <= 0) AND (0 <= (r_P_V2_y - r_S_y)))) AND NOT(((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y)))))) AND ((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (NOT(((sub_double(P_V2_x, S_x) <= integerToDouble(0)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) AND NOT(((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y))))))) OR (((0 <= (r_P_V1_x - r_S_x)) AND (0 <= (r_P_V1_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V1_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V1_y, S_y)))) OR (((0 <= (r_P_V2_x - r_S_x)) AND (0 <= (r_P_V2_y - r_S_y))) AND ((integerToDouble(0) <= sub_double(P_V2_x, S_x)) AND (integerToDouble(0) <= sub_double(P_V2_y, S_y)))) OR (NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))) AND NOT((quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant_fp(sub_double(P_V1_x, S_x), sub_double(P_V1_y, S_y)) = quadrant_fp(sub_double(P_V2_x, S_x), sub_double(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
LET THIS_x:real=(r_P_V1_x - r_S_x),
    Err_THIS_x:real=aebounddp_sub(r_P_V1_x, ulp_dp(r_P_V1_x)/2, r_S_x, ulp_dp(r_S_x)/2)
IN LET THIS_y:real=(r_P_V1_y - r_S_y),
       Err_THIS_y:real=aebounddp_sub(r_P_V1_y, ulp_dp(r_P_V1_y)/2, r_S_y, ulp_dp(r_S_y)/2)
   IN LET NEXT_x:real=(r_P_V2_x - r_S_x),
          Err_NEXT_x:real=aebounddp_sub(r_P_V2_x, ulp_dp(r_P_V2_x)/2, r_S_x, ulp_dp(r_S_x)/2)
      IN LET NEXT_y:real=(r_P_V2_y - r_S_y),
             Err_NEXT_y:real=aebounddp_sub(r_P_V2_y, ulp_dp(r_P_V2_y)/2, r_S_y, ulp_dp(r_S_y)/2)
         IN LET K:int=4,
                Err_K:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
            IN LET P:int=4,
                   Err_P:real=max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))
               IN max((0 / 1), (0 / 1))<=0 / 1

END let5_num_cert