% This file is automatically generated by PRECiSA 

let3_expr_cert: THEORY
BEGIN
IMPORTING float@extended_float_converter, PRECiSA@strategies, PRECiSA@bbiasp, PRECiSA@bbiadp

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

g_expr_1 : LEMMA
FORALL(B: double, X: double, Y: double, A: double, e_B, e_X, e_Y, e_A: nonneg_real, r_B, r_X, r_Y, r_A: real):
abs(safe_prjct_double(B)-r_B)<=e_B AND abs(safe_prjct_double(X)-r_X)<=e_X AND abs(safe_prjct_double(Y)-r_Y)<=e_Y AND abs(safe_prjct_double(A)-r_A)<=e_A
AND (TRUE)
IMPLIES
abs(safe_prjct_double(LET A:double=add_double(X, Y),
                          B:double=f_fp(A)
                      IN B) - LET r_A:real=(r_X + r_Y),
                                  r_B:real=f(r_A)
                              IN r_B) <= LET A:real=(r_X + r_Y),
                                             Err_A:real=aebounddp_add(r_X, e_X, r_Y, e_Y)
                                         IN LET B:real=(r_A * 2),
                                                Err_B:real=aebounddp_mul(r_A, Err_A, 2, (0 / 1))
                                            IN Err_B

%|- g_1: PROOF
%|- (precisa)
%|- QED


g_expr_num_1 : LEMMA
FORALL(B: double, X: double, Y: double, A: double, r_B, r_X, r_Y, r_A: real):
abs(safe_prjct_double(B) - r_B)<=ulp_dp(r_B)/2 AND abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2 AND abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2 AND abs(safe_prjct_double(A) - r_A)<=ulp_dp(r_A)/2
AND (TRUE)
AND r_X ## [|0,60|] AND  r_Y ## [|0,60|]
IMPLIES
abs(safe_prjct_double(LET A:double=add_double(X, Y),
                          B:double=f_fp(A)
                      IN B) - LET r_A:real=(r_X + r_Y),
                                  r_B:real=f(r_A)
                              IN r_B) <=3 / 70368744177664

%|- g_c_1 : PROOF
%|- (prove-concrete-lemma g_expr_1 14 7)
%|- QED

g_expr_2 : LEMMA
FORALL(B: double, X: double, Y: double, A: double, e_B, e_X, e_Y, e_A: nonneg_real, r_B, r_X, r_Y, r_A: real):
abs(safe_prjct_double(B)-r_B)<=e_B AND abs(safe_prjct_double(X)-r_X)<=e_X AND abs(safe_prjct_double(Y)-r_Y)<=e_Y AND abs(safe_prjct_double(A)-r_A)<=e_A
AND (TRUE)
IMPLIES
abs(safe_prjct_double(LET A:double=add_double(X, Y),
                          B:double=f_fp(A)
                      IN B) - LET r_A:real=(r_X + r_Y),
                                  r_B:real=f(r_A)
                              IN r_B) <= LET A:real=(r_X + r_Y),
                                             Err_A:real=aebounddp_add(r_X, e_X, r_Y, e_Y)
                                         IN LET B:real=(r_A * 2),
                                                Err_B:real=aebounddp_mul(r_A, Err_A, 2, (0 / 1))
                                            IN Err_B

%|- g_2: PROOF
%|- (precisa)
%|- QED


g_expr_num_2 : LEMMA
FORALL(B: double, X: double, Y: double, A: double, r_B, r_X, r_Y, r_A: real):
abs(safe_prjct_double(B) - r_B)<=ulp_dp(r_B)/2 AND abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2 AND abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2 AND abs(safe_prjct_double(A) - r_A)<=ulp_dp(r_A)/2
AND (TRUE)
AND r_X ## [|0,60|] AND  r_Y ## [|0,60|]
IMPLIES
abs(safe_prjct_double(LET A:double=add_double(X, Y),
                          B:double=f_fp(A)
                      IN B) - LET r_A:real=(r_X + r_Y),
                                  r_B:real=f(r_A)
                              IN r_B) <=3 / 70368744177664

%|- g_c_2 : PROOF
%|- (prove-concrete-lemma g_expr_2 14 7)
%|- QED


END let3_expr_cert