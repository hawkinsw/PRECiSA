% This file is automatically generated by PRECiSA 

% maxDepth: 7 , prec: 10^-14

let4_num_cert: THEORY
BEGIN
IMPORTING cert_let4, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: mul_double(X, 2)
% Real Results: (r_X * 2)
% Control Flow:  Stable
f_fp_c_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND ((TRUE AND TRUE))
AND r_X ## [|0,10|]
IMPLIES
abs(safe_prjct_double(f_fp(X)) - f(r_X))<=1 / 281474976710656

%|- f_fp_c_0 : PROOF
%|- (prove-concrete-lemma f_fp_0 14 7)
%|- QED

f_fp_err_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND ((TRUE AND TRUE))
AND r_X ## [|0,10|]
IMPLIES
aebounddp_mul(r_X, ulp_dp(r_X)/2, 2, (0 / 1))<=1 / 281474976710656

% Floating-Point Results: LET A:double=add_double(X, Y)
                          IN LET B:double=f_fp(A)
                             IN B
% Real Results: LET A:real=(r_X + r_Y)
                IN LET B:real=(r_A * 2)
                   IN r_B
% Control Flow:  Stable
g_fp_c_0 : LEMMA
FORALL(r_X, r_Y: real, X: double, Y: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2 AND abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2
AND ((TRUE AND TRUE))
AND r_X ## [|0,60|] AND  r_Y ## [|0,60|]
IMPLIES
abs(safe_prjct_double(g_fp(X, Y)) - g(r_X, r_Y))<=3 / 70368744177664

%|- g_fp_c_0 : PROOF
%|- (prove-concrete-lemma g_fp_0 14 7)
%|- QED

g_fp_err_0 : LEMMA
FORALL(r_X, r_Y: real, X: double, Y: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2 AND abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2
AND ((TRUE AND TRUE))
AND r_X ## [|0,60|] AND  r_Y ## [|0,60|]
IMPLIES
LET A:real=(r_X + r_Y),
    Err_A:real=aebounddp_add(r_X, ulp_dp(r_X)/2, r_Y, ulp_dp(r_Y)/2)
IN LET B:real=(r_A * 2),
       Err_B:real=aebounddp_mul(r_A, Err_A, 2, (0 / 1))
   IN Err_B<=3 / 70368744177664

END let4_num_cert