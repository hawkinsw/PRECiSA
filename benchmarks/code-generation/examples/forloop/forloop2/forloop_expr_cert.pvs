% This file is automatically generated by PRECiSA 

forloop_expr_cert: THEORY
BEGIN
IMPORTING float@extended_float_converter, PRECiSA@strategies, PRECiSA@bbiasp, PRECiSA@bbiadp

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

f_expr_1 : LEMMA
FORALL(X: double, e_X: nonneg_real, r_X: real):
abs(safe_prjct_double(X)-r_X)<=e_X
AND (TRUE)
IMPLIES
abs(safe_prjct_double(X) - r_X) <= e_X

%|- f_1: PROOF
%|- (precisa)
%|- QED


f_expr_num_1 : LEMMA
FORALL(X: double, r_X: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (TRUE)
AND r_X ## [|1,4|]
IMPLIES
abs(safe_prjct_double(X) - r_X) <=1 / 2251799813685248

%|- f_c_1 : PROOF
%|- (prove-concrete-lemma f_expr_1 14 7)
%|- QED

forloop_expr_1 : LEMMA
FORALL(,: nonneg_real,: real):
AND ((I < 2))
IMPLIES
abs(safe_prjct_double(integerToDouble(1)) - 1) <= (0 / 1)

%|- forloop_1: PROOF
%|- (precisa)
%|- QED


forloop_expr_num_1 : LEMMA
FORALL(,: real):
AND ((I < 2))
AND
IMPLIES
abs(safe_prjct_double(integerToDouble(1)) - 1) <=0 / 1

%|- forloop_c_1 : PROOF
%|- (prove-concrete-lemma forloop_expr_1 14 7)
%|- QED

forloop_expr_2 : LEMMA
FORALL(,: nonneg_real,: real):
AND (NOT((I < 2)))
IMPLIES
abs(safe_prjct_double(integerToDouble(2)) - 2) <= (0 / 1)

%|- forloop_2: PROOF
%|- (precisa)
%|- QED


forloop_expr_num_2 : LEMMA
FORALL(,: real):
AND (NOT((I < 2)))
AND
IMPLIES
abs(safe_prjct_double(integerToDouble(2)) - 2) <=0 / 1

%|- forloop_c_2 : PROOF
%|- (prove-concrete-lemma forloop_expr_2 14 7)
%|- QED


END forloop_expr_cert