% This file is automatically generated by PRECiSA 

% maxDepth: 7 , prec: 10^-14

functioncall3_num_cert: THEORY
BEGIN
IMPORTING cert_functioncall3, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: add_double(X, X), sub_double(X, X)
% Real Results: (r_X + r_X), (r_X - r_X)
% Control Flow:  Stable
f_fp_c_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND ((NOT((((r_X * r_X) - 2) > 0)) AND NOT((sub_double(mul_double(X, X), integerToDouble(2)) > integerToDouble(0)))) OR ((((r_X * r_X) - 2) > 0) AND (sub_double(mul_double(X, X), integerToDouble(2)) > integerToDouble(0))))
AND r_X ## [|0,100|]
IMPLIES
abs(safe_prjct_double(f_fp(X)) - f(r_X))<=1 / 35184372088832

%|- f_fp_c_0 : PROOF
%|- (prove-concrete-lemma f_fp_0 14 7)
%|- QED

f_fp_err_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND ((NOT((((r_X * r_X) - 2) > 0)) AND NOT((sub_double(mul_double(X, X), integerToDouble(2)) > integerToDouble(0)))) OR ((((r_X * r_X) - 2) > 0) AND (sub_double(mul_double(X, X), integerToDouble(2)) > integerToDouble(0))))
AND r_X ## [|0,100|]
IMPLIES
max(aebounddp_add(r_X, ulp_dp(r_X)/2, r_X, ulp_dp(r_X)/2), aebounddp_sub(r_X, ulp_dp(r_X)/2, r_X, ulp_dp(r_X)/2))<=1 / 35184372088832

% Floating-Point Results: -1, add_double(X, X), sub_double(X, X)
% Real Results: ((r_X * r_X) + (r_X * r_X)), ((r_X * r_X) - (r_X * r_X)), -1
% Control Flow:  Stable
g_fp_c_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (((NOT(((((r_X * r_X) * (r_X * r_X)) - 2) > 0)) AND NOT((f(r_X) > 0))) AND (NOT((sub_double(mul_double(mul_double(X, X), mul_double(X, X)), integerToDouble(2)) > integerToDouble(0))) AND NOT((f_fp(X) > integerToDouble(0))))) OR ((((((r_X * r_X) * (r_X * r_X)) - 2) > 0) AND NOT((f(r_X) > 0))) AND ((sub_double(mul_double(mul_double(X, X), mul_double(X, X)), integerToDouble(2)) > integerToDouble(0)) AND NOT((f_fp(X) > integerToDouble(0))))) OR ((f(r_X) > 0) AND (f_fp(X) > integerToDouble(0))))
AND r_X ## [|0,100|]
IMPLIES
abs(safe_prjct_double(g_fp(X)) - g(r_X))<=8022036836253697 / 1237940039285380274899124224

%|- g_fp_c_0 : PROOF
%|- (prove-concrete-lemma g_fp_0 14 7)
%|- QED

g_fp_err_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (((NOT(((((r_X * r_X) * (r_X * r_X)) - 2) > 0)) AND NOT((f(r_X) > 0))) AND (NOT((sub_double(mul_double(mul_double(X, X), mul_double(X, X)), integerToDouble(2)) > integerToDouble(0))) AND NOT((f_fp(X) > integerToDouble(0))))) OR ((((((r_X * r_X) * (r_X * r_X)) - 2) > 0) AND NOT((f(r_X) > 0))) AND ((sub_double(mul_double(mul_double(X, X), mul_double(X, X)), integerToDouble(2)) > integerToDouble(0)) AND NOT((f_fp(X) > integerToDouble(0))))) OR ((f(r_X) > 0) AND (f_fp(X) > integerToDouble(0))))
AND r_X ## [|0,100|]
IMPLIES
max((0 / 1), max(aebounddp_add((r_X * r_X), aebounddp_mul(r_X, ulp_dp(r_X)/2, r_X, ulp_dp(r_X)/2), (r_X * r_X), aebounddp_mul(r_X, ulp_dp(r_X)/2, r_X, ulp_dp(r_X)/2)), aebounddp_sub((r_X * r_X), aebounddp_mul(r_X, ulp_dp(r_X)/2, r_X, ulp_dp(r_X)/2), (r_X * r_X), aebounddp_mul(r_X, ulp_dp(r_X)/2, r_X, ulp_dp(r_X)/2))))<=8022036836253697 / 1237940039285380274899124224

END functioncall3_num_cert