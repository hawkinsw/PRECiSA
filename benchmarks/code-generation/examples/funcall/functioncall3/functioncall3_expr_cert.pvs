% This file is automatically generated by PRECiSA 

functioncall3_expr_cert: THEORY
BEGIN
IMPORTING float@extended_float_converter, PRECiSA@strategies, PRECiSA@bbiasp, PRECiSA@bbiadp

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

f_expr_1 : LEMMA
FORALL(X: double, e_X: nonneg_real, r_X: real):
abs(safe_prjct_double(X)-r_X)<=e_X
AND (TRUE)
IMPLIES
abs(safe_prjct_double(sub_double(mul_double(X, X), integerToDouble(2))) - ((r_X * r_X) - 2)) <= aebounddp_sub((r_X * r_X), aebounddp_mul(r_X, e_X, r_X, e_X), 2, (0 / 1))

%|- f_1: PROOF
%|- (precisa)
%|- QED


f_expr_num_1 : LEMMA
FORALL(X: double, r_X: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (TRUE)
AND r_X ## [|0,100|]
IMPLIES
abs(safe_prjct_double(sub_double(mul_double(X, X), integerToDouble(2))) - ((r_X * r_X) - 2)) <=8022036836253697 / 2475880078570760549798248448

%|- f_c_1 : PROOF
%|- (prove-concrete-lemma f_expr_1 14 7)
%|- QED

g_expr_1 : LEMMA
FORALL(X: double, e_X: nonneg_real, r_X: real):
abs(safe_prjct_double(X)-r_X)<=e_X
AND (NOT((f_fp(X) > integerToDouble(0))))
IMPLIES
abs(safe_prjct_double(sub_double(mul_double(mul_double(X, X), mul_double(X, X)), integerToDouble(2))) - (((r_X * r_X) * (r_X * r_X)) - 2)) <= aebounddp_sub(((r_X * r_X) * (r_X * r_X)), aebounddp_mul((r_X * r_X), aebounddp_mul(r_X, e_X, r_X, e_X), (r_X * r_X), aebounddp_mul(r_X, e_X, r_X, e_X)), 2, (0 / 1))

%|- g_1: PROOF
%|- (precisa)
%|- QED


g_expr_num_1 : LEMMA
FORALL(X: double, r_X: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (NOT((f_fp(X) > integerToDouble(0))))
AND r_X ## [|0,100|]
IMPLIES
abs(safe_prjct_double(sub_double(mul_double(mul_double(X, X), mul_double(X, X)), integerToDouble(2))) - (((r_X * r_X) * (r_X * r_X)) - 2)) <=2323886544781313 / 37778931862957161709568

%|- g_c_1 : PROOF
%|- (prove-concrete-lemma g_expr_1 14 7)
%|- QED

g_expr_2 : LEMMA
FORALL(X: double, e_X: nonneg_real, r_X: real):
abs(safe_prjct_double(X)-r_X)<=e_X
AND (TRUE)
IMPLIES
abs(safe_prjct_double(f_fp(X)) - f(r_X)) <= max(aebounddp_add(r_X, e_X, r_X, e_X), aebounddp_sub(r_X, e_X, r_X, e_X))

%|- g_2: PROOF
%|- (precisa)
%|- QED


g_expr_num_2 : LEMMA
FORALL(X: double, r_X: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (TRUE)
AND r_X ## [|0,100|]
IMPLIES
abs(safe_prjct_double(f_fp(X)) - f(r_X)) <=1 / 35184372088832

%|- g_c_2 : PROOF
%|- (prove-concrete-lemma g_expr_2 14 7)
%|- QED

g_expr_3 : LEMMA
FORALL(X: double, e_X: nonneg_real, r_X: real):
abs(safe_prjct_double(X)-r_X)<=e_X
AND (TRUE)
IMPLIES
abs(safe_prjct_double(sub_double(mul_double(X, X), integerToDouble(2))) - ((r_X * r_X) - 2)) <= aebounddp_sub((r_X * r_X), aebounddp_mul(r_X, e_X, r_X, e_X), 2, (0 / 1))

%|- g_3: PROOF
%|- (precisa)
%|- QED


g_expr_num_3 : LEMMA
FORALL(X: double, r_X: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (TRUE)
AND r_X ## [|0,100|]
IMPLIES
abs(safe_prjct_double(sub_double(mul_double(X, X), integerToDouble(2))) - ((r_X * r_X) - 2)) <=8022036836253697 / 2475880078570760549798248448

%|- g_c_3 : PROOF
%|- (prove-concrete-lemma g_expr_3 14 7)
%|- QED


END functioncall3_expr_cert