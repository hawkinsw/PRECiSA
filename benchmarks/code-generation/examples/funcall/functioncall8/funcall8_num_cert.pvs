% This file is automatically generated by PRECiSA 

% maxDepth: 7 , prec: 10^-14

funcall8_num_cert: THEORY
BEGIN
IMPORTING cert_funcall8, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: add_double(sx, vx), sub_double(sx, vx)
% Real Results: (r_sx + r_vx), (r_sx - r_vx)
% Control Flow:  Stable
f_fp_c_0 : LEMMA
FORALL(r_sx, r_vx: real, sx: double, vx: double):
abs(safe_prjct_double(sx) - r_sx)<=ulp_dp(r_sx)/2 AND abs(safe_prjct_double(vx) - r_vx)<=ulp_dp(r_vx)/2
AND ((NOT((r_sx < 0)) AND NOT((sx < integerToDouble(0)))) OR ((r_sx < 0) AND (sx < integerToDouble(0))))
AND r_sx ## [|1,1000|] AND  r_vx ## [|1,1000|]
IMPLIES
abs(safe_prjct_double(f_fp(sx, vx)) - f(r_sx, r_vx))<=1 / 4398046511104

%|- f_fp_c_0 : PROOF
%|- (prove-concrete-lemma f_fp_0 14 7)
%|- QED

f_fp_err_0 : LEMMA
FORALL(r_sx, r_vx: real, sx: double, vx: double):
abs(safe_prjct_double(sx) - r_sx)<=ulp_dp(r_sx)/2 AND abs(safe_prjct_double(vx) - r_vx)<=ulp_dp(r_vx)/2
AND ((NOT((r_sx < 0)) AND NOT((sx < integerToDouble(0)))) OR ((r_sx < 0) AND (sx < integerToDouble(0))))
AND r_sx ## [|1,1000|] AND  r_vx ## [|1,1000|]
IMPLIES
max(aebounddp_add(r_sx, ulp_dp(r_sx)/2, r_vx, ulp_dp(r_vx)/2), aebounddp_sub(r_sx, ulp_dp(r_sx)/2, r_vx, ulp_dp(r_vx)/2))<=1 / 4398046511104

END funcall8_num_cert