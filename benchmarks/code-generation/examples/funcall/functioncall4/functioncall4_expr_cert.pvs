% This file is automatically generated by PRECiSA 

functioncall4_expr_cert: THEORY
BEGIN
IMPORTING float@extended_float_converter, PRECiSA@strategies, PRECiSA@bbiasp, PRECiSA@bbiadp

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

f_expr_1 : LEMMA
FORALL(DET: double, V1: double, V2: double, e_DET, e_V1, e_V2: nonneg_real, r_DET, r_V1, r_V2: real):
abs(safe_prjct_double(DET)-r_DET)<=e_DET AND abs(safe_prjct_double(V1)-r_V1)<=e_V1 AND abs(safe_prjct_double(V2)-r_V2)<=e_V2
AND (TRUE)
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(V1, V2)
                      IN DET) - LET r_DET:real=(r_V1 - r_V2)
                                IN r_DET) <= LET DET:real=(r_V1 - r_V2),
                                                 Err_DET:real=aebounddp_sub(r_V1, e_V1, r_V2, e_V2)
                                             IN Err_DET

%|- f_1: PROOF
%|- (precisa)
%|- QED


f_expr_num_1 : LEMMA
FORALL(DET: double, V1: double, V2: double, r_DET, r_V1, r_V2: real):
abs(safe_prjct_double(DET) - r_DET)<=ulp_dp(r_DET)/2 AND abs(safe_prjct_double(V1) - r_V1)<=ulp_dp(r_V1)/2 AND abs(safe_prjct_double(V2) - r_V2)<=ulp_dp(r_V2)/2
AND (TRUE)
AND r_V1 ## [|-60000,60000|] AND  r_V2 ## [|-60000,60000|]
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(V1, V2)
                      IN DET) - LET r_DET:real=(r_V1 - r_V2)
                                IN r_DET) <=1 / 68719476736

%|- f_c_1 : PROOF
%|- (prove-concrete-lemma f_expr_1 14 7)
%|- QED

f_expr_2 : LEMMA
FORALL(DET: double, V1: double, V2: double, e_DET, e_V1, e_V2: nonneg_real, r_DET, r_V1, r_V2: real):
abs(safe_prjct_double(DET)-r_DET)<=e_DET AND abs(safe_prjct_double(V1)-r_V1)<=e_V1 AND abs(safe_prjct_double(V2)-r_V2)<=e_V2
AND (TRUE)
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(V1, V2)
                      IN DET) - LET r_DET:real=(r_V1 - r_V2)
                                IN r_DET) <= LET DET:real=(r_V1 - r_V2),
                                                 Err_DET:real=aebounddp_sub(r_V1, e_V1, r_V2, e_V2)
                                             IN Err_DET

%|- f_2: PROOF
%|- (precisa)
%|- QED


f_expr_num_2 : LEMMA
FORALL(DET: double, V1: double, V2: double, r_DET, r_V1, r_V2: real):
abs(safe_prjct_double(DET) - r_DET)<=ulp_dp(r_DET)/2 AND abs(safe_prjct_double(V1) - r_V1)<=ulp_dp(r_V1)/2 AND abs(safe_prjct_double(V2) - r_V2)<=ulp_dp(r_V2)/2
AND (TRUE)
AND r_V1 ## [|-60000,60000|] AND  r_V2 ## [|-60000,60000|]
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(V1, V2)
                      IN DET) - LET r_DET:real=(r_V1 - r_V2)
                                IN r_DET) <=1 / 68719476736

%|- f_c_2 : PROOF
%|- (prove-concrete-lemma f_expr_2 14 7)
%|- QED

g_expr_1 : LEMMA
FORALL(X: double, Y: double, e_X, e_Y: nonneg_real, r_X, r_Y: real):
abs(safe_prjct_double(X)-r_X)<=e_X AND abs(safe_prjct_double(Y)-r_Y)<=e_Y
AND ((X < integerToDouble(0)))
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(X, Y)
                      IN sub_double(X, Y)) - LET r_DET:real=(r_X - r_Y)
                                             IN (r_X - r_Y)) <= LET DET:real=(r_X - r_Y),
                                                                    Err_DET:real=aebounddp_sub(r_X, e_X, r_Y, e_Y)
                                                                IN aebounddp_sub(r_X, e_X, r_Y, e_Y)

%|- g_1: PROOF
%|- (precisa)
%|- QED


g_expr_num_1 : LEMMA
FORALL(X: double, Y: double, r_X, r_Y: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2 AND abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2
AND ((X < integerToDouble(0)))
AND r_X ## [|-60000,60000|] AND  r_Y ## [|-60000,60000|]
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(X, Y)
                      IN sub_double(X, Y)) - LET r_DET:real=(r_X - r_Y)
                                             IN (r_X - r_Y)) <=1 / 68719476736

%|- g_c_1 : PROOF
%|- (prove-concrete-lemma g_expr_1 14 7)
%|- QED

g_expr_2 : LEMMA
FORALL(X: double, Y: double, e_X, e_Y: nonneg_real, r_X, r_Y: real):
abs(safe_prjct_double(X)-r_X)<=e_X AND abs(safe_prjct_double(Y)-r_Y)<=e_Y
AND ((X < integerToDouble(0)))
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(X, Y)
                      IN sub_double(X, Y)) - LET r_DET:real=(r_X - r_Y)
                                             IN (r_X - r_Y)) <= LET DET:real=(r_X - r_Y),
                                                                    Err_DET:real=aebounddp_sub(r_X, e_X, r_Y, e_Y)
                                                                IN aebounddp_sub(r_X, e_X, r_Y, e_Y)

%|- g_2: PROOF
%|- (precisa)
%|- QED


g_expr_num_2 : LEMMA
FORALL(X: double, Y: double, r_X, r_Y: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2 AND abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2
AND ((X < integerToDouble(0)))
AND r_X ## [|-60000,60000|] AND  r_Y ## [|-60000,60000|]
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(X, Y)
                      IN sub_double(X, Y)) - LET r_DET:real=(r_X - r_Y)
                                             IN (r_X - r_Y)) <=1 / 68719476736

%|- g_c_2 : PROOF
%|- (prove-concrete-lemma g_expr_2 14 7)
%|- QED

g_expr_3 : LEMMA
FORALL(Y: double, X: double, e_Y, e_X: nonneg_real, r_Y, r_X: real):
abs(safe_prjct_double(Y)-r_Y)<=e_Y AND abs(safe_prjct_double(X)-r_X)<=e_X
AND (NOT((X < integerToDouble(0))))
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(Y, X)
                      IN sub_double(Y, X)) - LET r_DET:real=(r_Y - r_X)
                                             IN (r_Y - r_X)) <= LET DET:real=(r_Y - r_X),
                                                                    Err_DET:real=aebounddp_sub(r_Y, e_Y, r_X, e_X)
                                                                IN aebounddp_sub(r_Y, e_Y, r_X, e_X)

%|- g_3: PROOF
%|- (precisa)
%|- QED


g_expr_num_3 : LEMMA
FORALL(Y: double, X: double, r_Y, r_X: real):
abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2 AND abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (NOT((X < integerToDouble(0))))
AND r_X ## [|-60000,60000|] AND  r_Y ## [|-60000,60000|]
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(Y, X)
                      IN sub_double(Y, X)) - LET r_DET:real=(r_Y - r_X)
                                             IN (r_Y - r_X)) <=1 / 68719476736

%|- g_c_3 : PROOF
%|- (prove-concrete-lemma g_expr_3 14 7)
%|- QED

g_expr_4 : LEMMA
FORALL(Y: double, X: double, e_Y, e_X: nonneg_real, r_Y, r_X: real):
abs(safe_prjct_double(Y)-r_Y)<=e_Y AND abs(safe_prjct_double(X)-r_X)<=e_X
AND (NOT((X < integerToDouble(0))))
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(Y, X)
                      IN sub_double(Y, X)) - LET r_DET:real=(r_Y - r_X)
                                             IN (r_Y - r_X)) <= LET DET:real=(r_Y - r_X),
                                                                    Err_DET:real=aebounddp_sub(r_Y, e_Y, r_X, e_X)
                                                                IN aebounddp_sub(r_Y, e_Y, r_X, e_X)

%|- g_4: PROOF
%|- (precisa)
%|- QED


g_expr_num_4 : LEMMA
FORALL(Y: double, X: double, r_Y, r_X: real):
abs(safe_prjct_double(Y) - r_Y)<=ulp_dp(r_Y)/2 AND abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (NOT((X < integerToDouble(0))))
AND r_X ## [|-60000,60000|] AND  r_Y ## [|-60000,60000|]
IMPLIES
abs(safe_prjct_double(LET DET:double=sub_double(Y, X)
                      IN sub_double(Y, X)) - LET r_DET:real=(r_Y - r_X)
                                             IN (r_Y - r_X)) <=1 / 68719476736

%|- g_c_4 : PROOF
%|- (prove-concrete-lemma g_expr_4 14 7)
%|- QED

g_expr_5 : LEMMA
FORALL(X: double, e_X: nonneg_real, r_X: real):
abs(safe_prjct_double(X)-r_X)<=e_X
AND (TRUE)
IMPLIES
abs(safe_prjct_double(X) - r_X) <= e_X

%|- g_5: PROOF
%|- (precisa)
%|- QED


g_expr_num_5 : LEMMA
FORALL(X: double, r_X: real):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND (TRUE)
AND r_X ## [|-60000,60000|]
IMPLIES
abs(safe_prjct_double(X) - r_X) <=1 / 274877906944

%|- g_c_5 : PROOF
%|- (prove-concrete-lemma g_expr_5 14 7)
%|- QED


END functioncall4_expr_cert