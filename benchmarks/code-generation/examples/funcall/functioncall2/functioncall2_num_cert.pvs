% This file is automatically generated by PRECiSA 

% maxDepth: 7 , prec: 10^-14

functioncall2_num_cert: THEORY
BEGIN
IMPORTING cert_functioncall2, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: add_double(X, mul_double(X, 2))
% Real Results: (r_X + (r_X * 2))
% Control Flow:  Stable
f_fp_c_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND ((TRUE AND TRUE))
AND r_X ## [|0,100|]
IMPLIES
abs(safe_prjct_double(f_fp(X)) - f(r_X))<=9 / 140737488355328

%|- f_fp_c_0 : PROOF
%|- (prove-concrete-lemma f_fp_0 14 7)
%|- QED

f_fp_err_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND ((TRUE AND TRUE))
AND r_X ## [|0,100|]
IMPLIES
aebounddp_add(r_X, ulp_dp(r_X)/2, (r_X * 2), aebounddp_mul(r_X, ulp_dp(r_X)/2, 2, (0 / 1)))<=9 / 140737488355328

% Floating-Point Results: add_double(X, mul_double(X, 2))
% Real Results: ((r_X - 1) + ((r_X - 1) * 2)), (r_X + (r_X * 2))
% Control Flow:  Stable
g_fp_c_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND ((NOT((r_X > 0)) AND NOT((X > integerToDouble(0)))) OR ((r_X > 0) AND (X > integerToDouble(0))))
AND r_X ## [|0,100|]
IMPLIES
abs(safe_prjct_double(g_fp(X)) - g(r_X))<=3 / 35184372088832

%|- g_fp_c_0 : PROOF
%|- (prove-concrete-lemma g_fp_0 14 7)
%|- QED

g_fp_err_0 : LEMMA
FORALL(r_X: real, X: double):
abs(safe_prjct_double(X) - r_X)<=ulp_dp(r_X)/2
AND ((NOT((r_X > 0)) AND NOT((X > integerToDouble(0)))) OR ((r_X > 0) AND (X > integerToDouble(0))))
AND r_X ## [|0,100|]
IMPLIES
max(aebounddp_add(r_X, ulp_dp(r_X)/2, (r_X * 2), aebounddp_mul(r_X, ulp_dp(r_X)/2, 2, (0 / 1))), aebounddp_add((r_X - 1), aebounddp_sub(r_X, ulp_dp(r_X)/2, 1, (0 / 1)), ((r_X - 1) * 2), aebounddp_mul((r_X - 1), aebounddp_sub(r_X, ulp_dp(r_X)/2, 1, (0 / 1)), 2, (0 / 1))))<=3 / 35184372088832

END functioncall2_num_cert