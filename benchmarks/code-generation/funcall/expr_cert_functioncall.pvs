% This file is automatically generated by PRECiSA 

expr_cert_functioncall: THEORY
BEGIN
IMPORTING float@aerr754sp, float@aerr754dp, PRECiSA@strategies, PRECiSA@bbiasp, PRECiSA@bbiadp

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

f_expr_1 : LEMMA
FORALL(X: unb_double, e_X: nonneg_real, r_X: real):
abs(X-r_X) <=e_X
AND (TRUE)
IMPLIES
abs(DtoR(Dsub(Dmul(X, X), RtoD(2))) - ((r_X * r_X) - 2)) <= aebounddp_sub((r_X * r_X), aebounddp_mul(r_X, e_X, r_X, e_X), 2, (0 / 1))

%|- f_1: PROOF
%|- (precisa)
%|- QED


f_expr_num_1 : LEMMA
FORALL(X: unb_double, r_X: real):
abs(DtoR(X) - r_X)<=ulp_dp(r_X)/2
AND (TRUE)
AND r_X ## [|0,100|]
IMPLIES
abs(DtoR(Dsub(Dmul(X, X), RtoD(2))) - ((r_X * r_X) - 2)) <=0.0000000000032400748750660573

%|- f_c_1 : PROOF
%|- (prove-concrete-lemma f_expr_1 14 7)
%|- QED

g_expr_1 : LEMMA
FORALL(X: unb_double, e_X: nonneg_real, r_X: real):
abs(X-r_X) <=e_X
AND (NOT((RtoD(0) < Dmul(X, X))))
IMPLIES
abs(DtoR(Dsub(Dmul(Dmul(X, X), Dmul(X, X)), RtoD(2))) - (((r_X * r_X) * (r_X * r_X)) - 2)) <= aebounddp_sub(((r_X * r_X) * (r_X * r_X)), aebounddp_mul((r_X * r_X), aebounddp_mul(r_X, e_X, r_X, e_X), (r_X * r_X), aebounddp_mul(r_X, e_X, r_X, e_X)), 2, (0 / 1))

%|- g_1: PROOF
%|- (precisa)
%|- QED


g_expr_num_1 : LEMMA
FORALL(X: unb_double, r_X: real):
abs(DtoR(X) - r_X)<=ulp_dp(r_X)/2
AND (NOT((RtoD(0) < Dmul(X, X))))
AND r_X ## [|0,100|]
IMPLIES
abs(DtoR(Dsub(Dmul(Dmul(X, X), Dmul(X, X)), RtoD(2))) - (((r_X * r_X) * (r_X * r_X)) - 2)) <=0.00000006151276465971025

%|- g_c_1 : PROOF
%|- (prove-concrete-lemma g_expr_1 14 7)
%|- QED

g_expr_2 : LEMMA
FORALL(X: unb_double, e_X: nonneg_real, r_X: real):
abs(X-r_X) <=e_X
AND (TRUE)
IMPLIES
abs(DtoR(Dmul(X, X)) - (r_X * r_X)) <= aebounddp_mul(r_X, e_X, r_X, e_X)

%|- g_2: PROOF
%|- (precisa)
%|- QED


g_expr_num_2 : LEMMA
FORALL(X: unb_double, r_X: real):
abs(DtoR(X) - r_X)<=ulp_dp(r_X)/2
AND (TRUE)
AND r_X ## [|0,100|]
IMPLIES
abs(DtoR(Dmul(X, X)) - (r_X * r_X)) <=0.000000000002330580173293129

%|- g_c_2 : PROOF
%|- (prove-concrete-lemma g_expr_2 14 7)
%|- QED


END expr_cert_functioncall