% This file is automatically generated by PRECiSA 

% maxDepth: 7 , prec: 10^-14

eps_line_num_cert: THEORY
BEGIN
IMPORTING cert_eps_line, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: -1, 1
% Real Results: -1, 1
% Control Flow:  Stable
sgn_fp_c_0 : LEMMA
FORALL(r_x: real, x: double):
abs(safe_prjct_double(x) - r_x)<=ulp_dp(r_x)/2
AND ((NOT((r_x >= 0)) AND NOT((x >= integerToDouble(0)))) OR ((r_x >= 0) AND (x >= integerToDouble(0))))
AND r_x ## [|-60000,60000|]
IMPLIES
abs(sgn_fp(x) - sgn(r_x))<=0 / 1

%|- sgn_fp_c_0 : PROOF
%|- (prove-concrete-lemma sgn_fp_0 14 7)
%|- QED

sgn_fp_err_0 : LEMMA
FORALL(r_x: real, x: double):
abs(safe_prjct_double(x) - r_x)<=ulp_dp(r_x)/2
AND ((NOT((r_x >= 0)) AND NOT((x >= integerToDouble(0)))) OR ((r_x >= 0) AND (x >= integerToDouble(0))))
AND r_x ## [|-60000,60000|]
IMPLIES
max((0 / 1), (0 / 1))<=0 / 1

% Floating-Point Results: -1, 1
% Real Results: -1, 1
% Control Flow:  Stable
eps_line_fp_c_0 : LEMMA
FORALL(r_sx, r_vx, r_sy, r_vy: real, sx: double, vx: double, sy: double, vy: double):
abs(safe_prjct_double(sx) - r_sx)<=ulp_dp(r_sx)/2 AND abs(safe_prjct_double(vx) - r_vx)<=ulp_dp(r_vx)/2 AND abs(safe_prjct_double(sy) - r_sy)<=ulp_dp(r_sy)/2 AND abs(safe_prjct_double(vy) - r_vy)<=ulp_dp(r_vy)/2
AND ((NOT(((((r_sx * r_vx) + (r_sy * r_vy)) * ((r_sx * r_vx) - (r_sy * r_vy))) >= 0)) AND NOT((mul_double(add_double(mul_double(sx, vx), mul_double(sy, vy)), sub_double(mul_double(sx, vx), mul_double(sy, vy))) >= integerToDouble(0)))) OR (((((r_sx * r_vx) + (r_sy * r_vy)) * ((r_sx * r_vx) - (r_sy * r_vy))) >= 0) AND (mul_double(add_double(mul_double(sx, vx), mul_double(sy, vy)), sub_double(mul_double(sx, vx), mul_double(sy, vy))) >= integerToDouble(0))))
AND r_sx ## [|-60000,60000|] AND  r_vx ## [|-60000,60000|] AND  r_sy ## [|-60000,60000|] AND  r_vy ## [|-60000,60000|]
IMPLIES
abs(eps_line_fp(sx, vx, sy, vy) - eps_line(r_sx, r_vx, r_sy, r_vy))<=0 / 1

%|- eps_line_fp_c_0 : PROOF
%|- (prove-concrete-lemma eps_line_fp_0 14 7)
%|- QED

eps_line_fp_err_0 : LEMMA
FORALL(r_sx, r_vx, r_sy, r_vy: real, sx: double, vx: double, sy: double, vy: double):
abs(safe_prjct_double(sx) - r_sx)<=ulp_dp(r_sx)/2 AND abs(safe_prjct_double(vx) - r_vx)<=ulp_dp(r_vx)/2 AND abs(safe_prjct_double(sy) - r_sy)<=ulp_dp(r_sy)/2 AND abs(safe_prjct_double(vy) - r_vy)<=ulp_dp(r_vy)/2
AND ((NOT(((((r_sx * r_vx) + (r_sy * r_vy)) * ((r_sx * r_vx) - (r_sy * r_vy))) >= 0)) AND NOT((mul_double(add_double(mul_double(sx, vx), mul_double(sy, vy)), sub_double(mul_double(sx, vx), mul_double(sy, vy))) >= integerToDouble(0)))) OR (((((r_sx * r_vx) + (r_sy * r_vy)) * ((r_sx * r_vx) - (r_sy * r_vy))) >= 0) AND (mul_double(add_double(mul_double(sx, vx), mul_double(sy, vy)), sub_double(mul_double(sx, vx), mul_double(sy, vy))) >= integerToDouble(0))))
AND r_sx ## [|-60000,60000|] AND  r_vx ## [|-60000,60000|] AND  r_sy ## [|-60000,60000|] AND  r_vy ## [|-60000,60000|]
IMPLIES
max((0 / 1), (0 / 1))<=0 / 1

END eps_line_num_cert