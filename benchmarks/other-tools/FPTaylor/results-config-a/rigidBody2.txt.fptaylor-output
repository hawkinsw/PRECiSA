Date: Sat Jun 24 09:42:00 EDT 2017
Command:  ~/FPTaylor/repo/fptaylor -c config-a.cfg rigidBody2.txt
FPTaylor, version 0.9.1+dev

Loading: rigidBody2.txt

*************************************
Taylor form for: rnd64((rnd64((rnd64((rnd64((rnd64((rnd64((rnd64((rnd64(2) * rnd64(x1))) * rnd64(x2))) * rnd64(x3))) + rnd64((rnd64((rnd64(3) * rnd64(x3))) * rnd64(x3))))) - rnd64((rnd64((rnd64((rnd64(x2) * rnd64(x1))) * rnd64(x2))) * rnd64(x3))))) + rnd64((rnd64((rnd64(3) * rnd64(x3))) * rnd64(x3))))) - rnd64(x2)))

Conservative bound: [-58740.000000, 58740.000000]

Simplified rounding: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd64((rnd64(((2 * rnd64(x1)) * rnd64(x2))) * rnd64(x3))) + rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3))))) - rnd64((rnd64((rnd64((rnd64(x2) * rnd64(x1))) * rnd64(x2))) * rnd64(x3))))) + rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3))))) - rnd64(x2)))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = (((((((2 * x1) * x2) * x3) + ((3 * x3) * x3)) - (((x2 * x1) * x2) * x3)) + ((3 * x3) * x3)) - x2)
-1 (70): exp = -53: (3623560828420101/19342813113834066795298816)
1 (1): exp = -53: ((x3 * (x2 * (2 * 8))) + (-((x3 * (x2 * (x2 * 8))))))
2 (3): exp = -53: ((((x3 * ((2 * x1) * 8)) + (-((x3 * ((x2 * x1) * 8))))) + (-((x3 * (x2 * (x1 * 8)))))) + (-(8)))
3 (5): exp = -53: (x3 * ((2 * x1) * x2))
4 (7): exp = -53: ((((((((2 * x1) * x2) * 8) + ((3 * x3) * 8)) + (x3 * (3 * 8))) + (-((((x2 * x1) * x2) * 8)))) + ((3 * x3) * 8)) + (x3 * (3 * 8)))
5 (9): exp = -53: (((2 * x1) * x2) * x3)
6 (13): exp = -53: ((x3 * (3 * x3)) + (x3 * (3 * x3)))
7 (17): exp = -53: (((3 * x3) * x3) + ((3 * x3) * x3))
8 (19): exp = -53: ((((2 * x1) * x2) * x3) + ((3 * x3) * x3))
9 (24): exp = -53: (-((x3 * (x2 * (x2 * x1)))))
10 (28): exp = -53: (-((x3 * ((x2 * x1) * x2))))
11 (32): exp = -53: (-((((x2 * x1) * x2) * x3)))
12 (34): exp = -53: (((((2 * x1) * x2) * x3) + ((3 * x3) * x3)) - (((x2 * x1) * x2) * x3))
13 (44): exp = -53: ((((((2 * x1) * x2) * x3) + ((3 * x3) * x3)) - (((x2 * x1) * x2) * x3)) + ((3 * x3) * x3))
14 (47): exp = -53: (((((((2 * x1) * x2) * x3) + ((3 * x3) * x3)) - (((x2 * x1) * x2) * x3)) + ((3 * x3) * x3)) - x2)

Corresponding original subexpressions:
1: rnd64(x1)
2: rnd64(x2)
3: rnd64(((2 * rnd64(x1)) * rnd64(x2)))
4: rnd64(x3)
5: rnd64((rnd64(((2 * rnd64(x1)) * rnd64(x2))) * rnd64(x3)))
6: rnd64((3 * rnd64(x3)))
7: rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3)))
8: rnd(64,ne,1.000000,-53,0)((rnd64((rnd64(((2 * rnd64(x1)) * rnd64(x2))) * rnd64(x3))) + rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3)))))
9: rnd64((rnd64(x2) * rnd64(x1)))
10: rnd64((rnd64((rnd64(x2) * rnd64(x1))) * rnd64(x2)))
11: rnd64((rnd64((rnd64((rnd64(x2) * rnd64(x1))) * rnd64(x2))) * rnd64(x3)))
12: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd64((rnd64(((2 * rnd64(x1)) * rnd64(x2))) * rnd64(x3))) + rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3))))) - rnd64((rnd64((rnd64((rnd64(x2) * rnd64(x1))) * rnd64(x2))) * rnd64(x3)))))
13: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd64((rnd64(((2 * rnd64(x1)) * rnd64(x2))) * rnd64(x3))) + rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3))))) - rnd64((rnd64((rnd64((rnd64(x2) * rnd64(x1))) * rnd64(x2))) * rnd64(x3))))) + rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3)))))
14: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd64((rnd64(((2 * rnd64(x1)) * rnd64(x2))) * rnd64(x3))) + rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3))))) - rnd64((rnd64((rnd64((rnd64(x2) * rnd64(x1))) * rnd64(x2))) * rnd64(x3))))) + rnd64((rnd64((3 * rnd64(x3))) * rnd64(x3))))) - rnd64(x2)))

bounds: [-inf, inf]

Computing absolute errors
-1: exp = -53: 1.873337e-10 (low = 1.873337e-10, subopt = 0.0%)

Solving the approximate optimization problem

Absolute errors:
1: exp = -53: 3.060000e+04 (low = 3.060000e+04, subopt = 0.0%)
2: exp = -53: 5.760800e+04 (low = 5.715800e+04, subopt = 0.8%)
3: exp = -53: 6.750000e+03 (low = 6.750000e+03, subopt = 0.0%)
4: exp = -53: 3.204000e+04 (low = 3.186000e+04, subopt = 0.6%)
5: exp = -53: 6.750000e+03 (low = 6.750000e+03, subopt = 0.0%)
6: exp = -53: 1.350000e+03 (low = 1.350000e+03, subopt = 0.0%)
7: exp = -53: 1.350000e+03 (low = 1.350000e+03, subopt = 0.0%)
8: exp = -53: 7.425000e+03 (low = 7.425000e+03, subopt = 0.0%)
9: exp = -53: 5.062500e+04 (low = 5.022949e+04, subopt = 0.8%)
10: exp = -53: 5.062500e+04 (low = 5.022949e+04, subopt = 0.8%)
11: exp = -53: 5.062500e+04 (low = 5.022949e+04, subopt = 0.8%)
12: exp = -53: 5.805000e+04 (low = 5.760176e+04, subopt = 0.8%)
13: exp = -53: 5.872500e+04 (low = 5.827676e+04, subopt = 0.8%)
14: exp = -53: 5.874000e+04 (low = 5.829176e+04, subopt = 0.8%)
total1: 5.232070e-11 (low = 5.196973e-11, subopt = 0.7%)
total2: 2.079822e-26 (low = 2.079822e-26, subopt = 0.0%)
total: 5.232070e-11 (low = 5.196973e-11, subopt = 0.7%)

Elapsed time: 3.13615
*************************************

-------------------------------------------------------------------------------
Problem: rigidBody2

Optimization lower bounds for error models:
The absolute error model (approximate): 5.196973e-11 (suboptimality = 0.7%)

Bounds (without rounding): [-inf, inf]

Absolute error (approximate): 5.232070e-11

Elapsed time: 3.14



real	0m3.141s
user	0m2.628s
sys	0m0.192s
