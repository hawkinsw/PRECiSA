Date: Sat Jun 24 09:40:46 EDT 2017
Command:  ~/FPTaylor/repo/fptaylor -c config-a.cfg carbonGas.txt
FPTaylor, version 0.9.1+dev

Loading: carbonGas.txt
Variable T is a constant
Variable a is a constant
Variable b is a constant
Variable N is a constant
Variable p is a constant

*************************************
Taylor form for: rnd64((rnd64((rnd64((rnd64(35000000) + rnd64((rnd64((rnd64((401/1000)) * rnd64((rnd64(1000) / rnd64(V))))) * rnd64((rnd64(1000) / rnd64(V))))))) * rnd64((rnd64(V) - rnd64((rnd64(1000) * rnd64((427/10000000)))))))) - rnd64((rnd64((rnd64((13806503/1000000000000000000000000000000)) * rnd64(1000))) * rnd64(300)))))

Conservative bound: [2097409.200000, 34343230.000000]

Simplified rounding: rnd(64,ne,1.000000,-53,0)((rnd64((rnd(64,ne,1.000000,-53,0)((35000000 + rnd64((rnd64((rnd64((401/1000)) * rnd64((1000 / rnd64(V))))) * rnd64((1000 / rnd64(V))))))) * rnd(64,ne,1.000000,-53,0)((rnd64(V) - rnd64((1000 * rnd64((427/10000000)))))))) - rnd64((rnd64((rnd64((13806503/1000000000000000000000000000000)) * 1000)) * 300))))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = (((35000000 + (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))) * (V - (1000 * (427/10000000)))) - (((13806503/1000000000000000000000000000000) * 1000) * 300))
-1 (58): exp = -53: (8638461311385621/37778931862957161709568)
1 (1): exp = -53: ((V - (1000 * (427/10000000))) * ((1000 * (1 / V)) * ((1000 * (1 / V)) * (1/4))))
2 (20): exp = -53: ((((35000000 + (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))) * (1/4)) + ((V - (1000 * (427/10000000))) * (((401/1000) * (1000 * (1 / V))) * (1000 * (-(((1/4) / (V * V)))))))) + ((V - (1000 * (427/10000000))) * ((1000 * (1 / V)) * ((401/1000) * (1000 * (-(((1/4) / (V * V)))))))))
3 (13): exp = -53: (((V - (1000 * (427/10000000))) * (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))) + ((V - (1000 * (427/10000000))) * ((1000 * (1 / V)) * ((401/1000) * (1000 * (1 / V))))))
4 (8): exp = -53: ((V - (1000 * (427/10000000))) * ((1000 * (1 / V)) * ((401/1000) * (1000 * (1 / V)))))
5 (16): exp = -53: ((V - (1000 * (427/10000000))) * (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V))))
6 (18): exp = -53: ((V - (1000 * (427/10000000))) * (35000000 + (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))))
7 (21): exp = -53: ((35000000 + (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))) * (-((1000 * (1/32768)))))
8 (23): exp = -53: ((35000000 + (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))) * (-((1000 * (427/10000000)))))
9 (25): exp = -53: ((35000000 + (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))) * (V - (1000 * (427/10000000))))
10 (28): exp = -53: ((35000000 + (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))) * (V - (1000 * (427/10000000))))
11 (30): exp = -53: (-((300 * (1000 * (1/75557863725914323419136)))))
12 (32): exp = -53: (-((300 * ((13806503/1000000000000000000000000000000) * 1000))))
13 (35): exp = -53: (-((((13806503/1000000000000000000000000000000) * 1000) * 300)))
14 (37): exp = -53: (((35000000 + (((401/1000) * (1000 * (1 / V))) * (1000 * (1 / V)))) * (V - (1000 * (427/10000000)))) - (((13806503/1000000000000000000000000000000) * 1000) * 300))

Corresponding original subexpressions:
1: rnd64((401/1000))
2: rnd64(V)
3: rnd64((1000 / rnd64(V)))
4: rnd64((rnd64((401/1000)) * rnd64((1000 / rnd64(V)))))
5: rnd64((rnd64((rnd64((401/1000)) * rnd64((1000 / rnd64(V))))) * rnd64((1000 / rnd64(V)))))
6: rnd(64,ne,1.000000,-53,0)((35000000 + rnd64((rnd64((rnd64((401/1000)) * rnd64((1000 / rnd64(V))))) * rnd64((1000 / rnd64(V)))))))
7: rnd64((427/10000000))
8: rnd64((1000 * rnd64((427/10000000))))
9: rnd(64,ne,1.000000,-53,0)((rnd64(V) - rnd64((1000 * rnd64((427/10000000))))))
10: rnd64((rnd(64,ne,1.000000,-53,0)((35000000 + rnd64((rnd64((rnd64((401/1000)) * rnd64((1000 / rnd64(V))))) * rnd64((1000 / rnd64(V))))))) * rnd(64,ne,1.000000,-53,0)((rnd64(V) - rnd64((1000 * rnd64((427/10000000))))))))
11: rnd64((13806503/1000000000000000000000000000000))
12: rnd64((rnd64((13806503/1000000000000000000000000000000)) * 1000))
13: rnd64((rnd64((rnd64((13806503/1000000000000000000000000000000)) * 1000)) * 300))
14: rnd(64,ne,1.000000,-53,0)((rnd64((rnd(64,ne,1.000000,-53,0)((35000000 + rnd64((rnd64((rnd64((401/1000)) * rnd64((1000 / rnd64(V))))) * rnd64((1000 / rnd64(V))))))) * rnd(64,ne,1.000000,-53,0)((rnd64(V) - rnd64((1000 * rnd64((427/10000000)))))))) - rnd64((rnd64((rnd64((13806503/1000000000000000000000000000000)) * 1000)) * 300))))

bounds: [-inf, inf]

Computing absolute errors
-1: exp = -53: 2.286582e-07 (low = 2.286582e-07, subopt = 0.0%)

Solving the approximate optimization problem

Absolute errors:
1: exp = -53: 1.588750e+06 (low = 1.432500e+06, subopt = 9.8%)
2: exp = -53: 9.196838e+06 (low = 8.417491e+06, subopt = 8.5%)
3: exp = -53: 5.096710e+06 (low = 4.595460e+06, subopt = 9.8%)
4: exp = -53: 2.548355e+06 (low = 2.297730e+06, subopt = 9.8%)
5: exp = -53: 2.548355e+06 (low = 2.297730e+06, subopt = 9.8%)
6: exp = -53: 1.681825e+07 (low = 1.673901e+07, subopt = 0.5%)
7: exp = -53: 2.291870e+06 (low = 2.291870e+06, subopt = 0.0%)
8: exp = -53: 3.206770e+06 (low = 3.206770e+06, subopt = 0.0%)
9: exp = -53: 1.681825e+07 (low = 1.673901e+07, subopt = 0.5%)
10: exp = -53: 1.681825e+07 (low = 1.673901e+07, subopt = 0.5%)
11: exp = -53: 3.970467e-18 (low = 3.970467e-18, subopt = 0.0%)
12: exp = -53: 4.141951e-18 (low = 4.141951e-18, subopt = 0.0%)
13: exp = -53: 4.141951e-18 (low = 4.141951e-18, subopt = 0.0%)
14: exp = -53: 1.681825e+07 (low = 1.673901e+07, subopt = 0.5%)
total1: 1.040841e-08 (low = 1.015805e-08, subopt = 2.4%)
total2: 2.538616e-23 (low = 2.538616e-23, subopt = 0.0%)
total: 1.040841e-08 (low = 1.015805e-08, subopt = 2.4%)

Elapsed time: 3.13318
*************************************

-------------------------------------------------------------------------------
Problem: carbon_gas

Optimization lower bounds for error models:
The absolute error model (approximate): 1.015805e-08 (suboptimality = 2.4%)

Bounds (without rounding): [-inf, inf]

Absolute error (approximate): 1.040841e-08

Elapsed time: 3.13



real	0m3.139s
user	0m2.688s
sys	0m0.148s
