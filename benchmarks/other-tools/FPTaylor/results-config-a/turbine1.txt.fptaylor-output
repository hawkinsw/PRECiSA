Date: Sat Jun 24 09:42:14 EDT 2017
Command:  ~/FPTaylor/repo/fptaylor -c config-a.cfg turbine1.txt
FPTaylor, version 0.9.1+dev

Loading: turbine1.txt

*************************************
Taylor form for: rnd64((rnd64((rnd64((rnd64(3) + rnd64((rnd64(2) / rnd64((rnd64(r) * rnd64(r))))))) - rnd64((rnd64((rnd64((rnd64((1/8)) * rnd64((rnd64(3) - rnd64((rnd64(2) * rnd64(v))))))) * rnd64((rnd64((rnd64((rnd64(w) * rnd64(w))) * rnd64(r))) * rnd64(r))))) / rnd64((rnd64(1) - rnd64(v))))))) - rnd64((9/2))))

Conservative bound: [-58.329127, -1.550529]

Simplified rounding: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((3 + rnd64((2 / rnd64((rnd64(r) * rnd64(r))))))) - rnd64((rnd64((rnd(64,ne,1.000000,0,-1022)(((1/8) * rnd(64,ne,1.000000,-53,0)((3 - (2 * rnd64(v)))))) * rnd64((rnd64((rnd64((rnd64(w) * rnd64(w))) * rnd64(r))) * rnd64(r))))) / rnd(64,ne,1.000000,-53,0)((1 - rnd64(v))))))) - (9/2)))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = (((3 + (2 * (1 / (r * r)))) - ((((1/8) * (3 - (2 * v))) * (((w * w) * r) * r)) * (1 / (1 - v)))) - (9/2))
-1 (67): exp = -53: (5918452525094913/4951760157141521099596496896)
1 (2): exp = -53: ((((2 * (-(((r * 4) / ((r * r) * (r * r)))))) + (2 * (-(((r * 4) / ((r * r) * (r * r))))))) + (-(((1 / (1 - v)) * (((1/8) * (3 - (2 * v))) * (((w * w) * r) * 4)))))) + (-(((1 / (1 - v)) * (((1/8) * (3 - (2 * v))) * (r * ((w * w) * 4)))))))
2 (4): exp = -53: (2 * (-(((r * r) / ((r * r) * (r * r))))))
3 (8): exp = -53: (2 * (1 / (r * r)))
4 (10): exp = -53: (3 + (2 * (1 / (r * r))))
5 (34): exp = -53: ((-(((((1/8) * (3 - (2 * v))) * (((w * w) * r) * r)) * (-(((-(4)) / ((1 - v) * (1 - v)))))))) + (-(((1 / (1 - v)) * ((((w * w) * r) * r) * ((1/8) * (-((2 * 4)))))))))
6 (14): exp = -53: (-(((1 / (1 - v)) * ((((w * w) * r) * r) * ((1/8) * (3 - (2 * v)))))))
7 (19): exp = -53: ((-(((1 / (1 - v)) * (((1/8) * (3 - (2 * v))) * (r * (r * (w * (1/2)))))))) + (-(((1 / (1 - v)) * (((1/8) * (3 - (2 * v))) * (r * (r * (w * (1/2)))))))))
8 (21): exp = -53: (-(((1 / (1 - v)) * (((1/8) * (3 - (2 * v))) * (r * (r * (w * w)))))))
9 (25): exp = -53: (-(((1 / (1 - v)) * (((1/8) * (3 - (2 * v))) * (r * ((w * w) * r))))))
10 (29): exp = -53: (-(((1 / (1 - v)) * (((1/8) * (3 - (2 * v))) * (((w * w) * r) * r)))))
11 (32): exp = -53: (-(((1 / (1 - v)) * (((1/8) * (3 - (2 * v))) * (((w * w) * r) * r)))))
12 (35): exp = -53: (-(((((1/8) * (3 - (2 * v))) * (((w * w) * r) * r)) * (-(((1 - v) / ((1 - v) * (1 - v))))))))
13 (39): exp = -53: (-(((((1/8) * (3 - (2 * v))) * (((w * w) * r) * r)) * (1 / (1 - v)))))
14 (41): exp = -53: ((3 + (2 * (1 / (r * r)))) - ((((1/8) * (3 - (2 * v))) * (((w * w) * r) * r)) * (1 / (1 - v))))
15 (43): exp = -53: (((3 + (2 * (1 / (r * r)))) - ((((1/8) * (3 - (2 * v))) * (((w * w) * r) * r)) * (1 / (1 - v)))) - (9/2))

Corresponding original subexpressions:
1: rnd64(r)
2: rnd64((rnd64(r) * rnd64(r)))
3: rnd64((2 / rnd64((rnd64(r) * rnd64(r)))))
4: rnd(64,ne,1.000000,-53,0)((3 + rnd64((2 / rnd64((rnd64(r) * rnd64(r)))))))
5: rnd64(v)
6: rnd(64,ne,1.000000,-53,0)((3 - (2 * rnd64(v))))
7: rnd64(w)
8: rnd64((rnd64(w) * rnd64(w)))
9: rnd64((rnd64((rnd64(w) * rnd64(w))) * rnd64(r)))
10: rnd64((rnd64((rnd64((rnd64(w) * rnd64(w))) * rnd64(r))) * rnd64(r)))
11: rnd64((rnd(64,ne,1.000000,0,-1022)(((1/8) * rnd(64,ne,1.000000,-53,0)((3 - (2 * rnd64(v)))))) * rnd64((rnd64((rnd64((rnd64(w) * rnd64(w))) * rnd64(r))) * rnd64(r)))))
12: rnd(64,ne,1.000000,-53,0)((1 - rnd64(v)))
13: rnd64((rnd64((rnd(64,ne,1.000000,0,-1022)(((1/8) * rnd(64,ne,1.000000,-53,0)((3 - (2 * rnd64(v)))))) * rnd64((rnd64((rnd64((rnd64(w) * rnd64(w))) * rnd64(r))) * rnd64(r))))) / rnd(64,ne,1.000000,-53,0)((1 - rnd64(v)))))
14: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((3 + rnd64((2 / rnd64((rnd64(r) * rnd64(r))))))) - rnd64((rnd64((rnd(64,ne,1.000000,0,-1022)(((1/8) * rnd(64,ne,1.000000,-53,0)((3 - (2 * rnd64(v)))))) * rnd64((rnd64((rnd64((rnd64(w) * rnd64(w))) * rnd64(r))) * rnd64(r))))) / rnd(64,ne,1.000000,-53,0)((1 - rnd64(v)))))))
15: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((3 + rnd64((2 / rnd64((rnd64(r) * rnd64(r))))))) - rnd64((rnd64((rnd(64,ne,1.000000,0,-1022)(((1/8) * rnd(64,ne,1.000000,-53,0)((3 - (2 * rnd64(v)))))) * rnd64((rnd64((rnd64((rnd64(w) * rnd64(w))) * rnd64(r))) * rnd64(r))))) / rnd(64,ne,1.000000,-53,0)((1 - rnd64(v))))))) - (9/2)))

bounds: [-inf, inf]

Computing absolute errors
-1: exp = -53: 1.195222e-12 (low = 1.195222e-12, subopt = 0.0%)

Solving the approximate optimization problem

Absolute errors:
1: exp = -53: 1.768973e+01 (low = 1.752972e+01, subopt = 0.9%)
2: exp = -53: 1.477661e-01 (low = 1.385042e-01, subopt = 6.3%)
3: exp = -53: 1.385042e-01 (low = 1.385042e-01, subopt = 0.0%)
4: exp = -53: 3.138504e+00 (low = 3.138504e+00, subopt = 0.0%)
5: exp = -53: 1.578219e+01 (low = 1.458000e+01, subopt = 7.6%)
6: exp = -53: 1.721408e+01 (low = 1.705860e+01, subopt = 0.9%)
7: exp = -53: 1.912676e+01 (low = 1.895400e+01, subopt = 0.9%)
8: exp = -53: 1.721408e+01 (low = 1.705860e+01, subopt = 0.9%)
9: exp = -53: 1.721408e+01 (low = 1.705860e+01, subopt = 0.9%)
10: exp = -53: 1.721408e+01 (low = 1.705860e+01, subopt = 0.9%)
11: exp = -53: 1.721408e+01 (low = 1.705860e+01, subopt = 0.9%)
12: exp = -53: 1.724447e+01 (low = 1.705860e+01, subopt = 1.1%)
13: exp = -53: 1.721408e+01 (low = 1.705860e+01, subopt = 0.9%)
14: exp = -53: 1.410347e+01 (low = 1.402573e+01, subopt = 0.6%)
15: exp = -53: 1.868121e+01 (low = 1.852573e+01, subopt = 0.8%)
total1: 2.324109e-14 (low = 2.291954e-14, subopt = 1.4%)
total2: 1.326963e-28 (low = 1.326963e-28, subopt = 0.0%)
total: 2.324109e-14 (low = 2.291954e-14, subopt = 1.4%)

Elapsed time: 4.34142
*************************************

-------------------------------------------------------------------------------
Problem: turbine1

Optimization lower bounds for error models:
The absolute error model (approximate): 2.291954e-14 (suboptimality = 1.4%)

Bounds (without rounding): [-inf, inf]

Absolute error (approximate): 2.324109e-14

Elapsed time: 4.34



real	0m4.347s
user	0m3.828s
sys	0m0.184s
