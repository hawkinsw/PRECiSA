Date: Sat Jun 24 09:34:57 EDT 2017
Command:  ~/FPTaylor/repo/fptaylor -c config-c-tol.cfg rigidBody1.txt
FPTaylor, version 0.9.1+dev

Loading: rigidBody1.txt

*************************************
Taylor form for: rnd64((rnd64((rnd64((rnd64((rnd64((-(rnd64(x1)))) * rnd64(x2))) - rnd64((rnd64((rnd64(2) * rnd64(x2))) * rnd64(x3))))) - rnd64(x1))) - rnd64(x3)))

Conservative bound: [-705.000000, 705.000000]

Simplified rounding: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd64(((-(rnd64(x1))) * rnd64(x2))) - rnd64(((2 * rnd64(x2)) * rnd64(x3))))) - rnd64(x1))) - rnd64(x3)))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = (((((-(x1)) * x2) - ((2 * x2) * x3)) - x1) - x3)
-1 (26): exp = -53: (3377699720527873/158456325028528675187087900672)
1 (1): exp = -53: ((x2 * (-(floor_power2(x1)))) + (-(floor_power2(x1))))
2 (2): exp = -53: (((-(x1)) * floor_power2(x2)) + (-((x3 * (2 * floor_power2(x2))))))
3 (4): exp = -53: floor_power2((((-(x1)) * x2) + interval(-2.66453525910037601256e-14, 2.66453525910037601256e-14)))
4 (8): exp = -53: ((-(((2 * x2) * floor_power2(x3)))) + (-(floor_power2(x3))))
5 (10): exp = -53: (-(floor_power2((((2 * x2) * x3) + interval(-5.32907051820075202512e-14, 5.32907051820075202512e-14)))))
6 (12): exp = -53: floor_power2(((((-(x1)) * x2) - ((2 * x2) * x3)) + interval(-1.22568621918617332550e-13, 1.22568621918617332550e-13)))
7 (15): exp = -53: floor_power2((((((-(x1)) * x2) - ((2 * x2) * x3)) - x1) + interval(-1.80300219199125472652e-13, 1.80300219199125472652e-13)))
8 (18): exp = -53: floor_power2(((((((-(x1)) * x2) - ((2 * x2) * x3)) - x1) - x3) + interval(-2.38031816479633612754e-13, 2.38031816479633612754e-13)))

Corresponding original subexpressions:
1: rnd64(x1)
2: rnd64(x2)
3: rnd64(((-(rnd64(x1))) * rnd64(x2)))
4: rnd64(x3)
5: rnd64(((2 * rnd64(x2)) * rnd64(x3)))
6: rnd(64,ne,1.000000,-53,0)((rnd64(((-(rnd64(x1))) * rnd64(x2))) - rnd64(((2 * rnd64(x2)) * rnd64(x3)))))
7: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd64(((-(rnd64(x1))) * rnd64(x2))) - rnd64(((2 * rnd64(x2)) * rnd64(x3))))) - rnd64(x1)))
8: rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd(64,ne,1.000000,-53,0)((rnd64(((-(rnd64(x1))) * rnd64(x2))) - rnd64(((2 * rnd64(x2)) * rnd64(x3))))) - rnd64(x1))) - rnd64(x3)))

bounds: [-inf, inf]

Computing absolute errors
-1: exp = -53: 2.131628e-14 (low = 2.131628e-14, subopt = 0.0%)

Solving the exact optimization problem
exact bound (exp = -53): 2.656000e+03 (low = 2.656000e+03, subopt = 0.0%)
total2: 2.366583e-30 (low = 2.366583e-30, subopt = 0.0%)
exact total: 2.948752e-13 (low = 2.948752e-13, subopt = 0.0%)

Elapsed time: 0.48443
*************************************

-------------------------------------------------------------------------------
Problem: rigidBody1

Optimization lower bounds for error models:
The absolute error model (exact): 2.948752e-13 (suboptimality = 0.0%)

Bounds (without rounding): [-inf, inf]

Absolute error (exact): 2.948752e-13

Elapsed time: 0.48



real	0m0.489s
user	0m0.412s
sys	0m0.036s
