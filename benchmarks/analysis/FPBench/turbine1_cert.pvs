% This file is automatically generated by PRECiSA 

turbine1_cert: THEORY
BEGIN
IMPORTING PRECiSA@strategies, float@aerr754sp, float@aerr754dp, turbine1,turbine1_real

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Result: Dsub(Dsub(Ddiv(Dadd(3, 2), Dmul(R, R)), Ddiv(Dmul(Dmul((1 / 8), Dsub(3, Dmul(2, V))), Dmul(W, Dmul(W, Dmul(R, R)))), Dsub(1, V))), ((-9) / 2))
% Control Flow: Stable
turbine1_0 : LEMMA
FORALL(e_V, e_W, e_R: nonneg_real, r_V, r_W, r_R: real, V: unb_double, W: unb_double, R: unb_double):
abs(DtoR(V) - r_V)<=e_V AND abs(DtoR(W) - r_W)<=e_W AND abs(DtoR(R) - r_R)<=e_R
AND (((((r_R * r_R) /= 0) AND ((1 - r_V) /= 0)) AND ((Dmul(R, R) /= 0) AND (Dsub(1, V) /= 0))))
IMPLIES
abs(DtoR(turbine1(V, W, R)) - turbine1_real(r_V, r_W, r_R))<=aebounddp_sub((((3 + 2) / (r_R * r_R)) - ((((1 / 8) * (3 - (2 * r_V))) * (r_W * (r_W * (r_R * r_R)))) / (1 - r_V))), aebounddp_sub(((3 + 2) / (r_R * r_R)), aebounddp_div((3 + 2), aebounddp_add(3, (0 / 1), 2, (0 / 1)), (r_R * r_R), aebounddp_mul(r_R, e_R, r_R, e_R)), ((((1 / 8) * (3 - (2 * r_V))) * (r_W * (r_W * (r_R * r_R)))) / (1 - r_V)), aebounddp_div((((1 / 8) * (3 - (2 * r_V))) * (r_W * (r_W * (r_R * r_R)))), aebounddp_mul(((1 / 8) * (3 - (2 * r_V))), aebounddp_mul((1 / 8), (0 / 1), (3 - (2 * r_V)), aebounddp_sub(3, (0 / 1), (2 * r_V), aebounddp_mul(2, (0 / 1), r_V, e_V))), (r_W * (r_W * (r_R * r_R))), aebounddp_mul(r_W, e_W, (r_W * (r_R * r_R)), aebounddp_mul(r_W, e_W, (r_R * r_R), aebounddp_mul(r_R, e_R, r_R, e_R)))), (1 - r_V), aebounddp_sub(1, (0 / 1), r_V, e_V))), ((-9) / 2), (0 / 1))


%|- turbine1_0: PROOF
%|- (precisa)
%|- QED


END turbine1_cert