% This file is automatically generated by PRECiSA 

azimuth_cert: THEORY
BEGIN
IMPORTING PRECiSA@strategies, float@aerr754sp, float@aerr754dp, azimuth,azimuth_real

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Result: Datan(Ddiv(Dmul(Dcos(Lat2), Dsin(Dsub(Lon2, Lon1))), Dsub(Dmul(Dcos(Lat1), Dsin(Lat2)), Dmul(Dsin(Lat1), Dmul(Dcos(Lat2), Dcos(Dsub(Lon2, Lon1)))))))
% Control Flow: Stable
azimuth_0 : LEMMA
FORALL(e_Lat1, e_Lon1, e_Lat2, e_Lon2: nonneg_real, r_Lat1, r_Lon1, r_Lat2, r_Lon2: real, Lat1: unb_double, Lon1: unb_double, Lat2: unb_double, Lon2: unb_double):
abs(DtoR(Lat1) - r_Lat1)<=e_Lat1 AND abs(DtoR(Lon1) - r_Lon1)<=e_Lon1 AND abs(DtoR(Lat2) - r_Lat2)<=e_Lat2 AND abs(DtoR(Lon2) - r_Lon2)<=e_Lon2
AND ((((((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))))) /= 0) AND (aebounddp_div((cos(r_Lat2) * sin((r_Lon2 - r_Lon1))), aebounddp_mul(cos(r_Lat2), aebounddp_cos(r_Lat2, e_Lat2), sin((r_Lon2 - r_Lon1)), aebounddp_sin((r_Lon2 - r_Lon1), aebounddp_sub(r_Lon2, e_Lon2, r_Lon1, e_Lon1))), ((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))))), aebounddp_sub((cos(r_Lat1) * sin(r_Lat2)), aebounddp_mul(cos(r_Lat1), aebounddp_cos(r_Lat1, e_Lat1), sin(r_Lat2), aebounddp_sin(r_Lat2, e_Lat2)), (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1)))), aebounddp_mul(sin(r_Lat1), aebounddp_sin(r_Lat1, e_Lat1), (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))), aebounddp_mul(cos(r_Lat2), aebounddp_cos(r_Lat2, e_Lat2), cos((r_Lon2 - r_Lon1)), aebounddp_cos((r_Lon2 - r_Lon1), aebounddp_sub(r_Lon2, e_Lon2, r_Lon1, e_Lon1)))))) < abs(((cos(r_Lat2) * sin((r_Lon2 - r_Lon1))) / ((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))))))))) AND (Dsub(Dmul(Dcos(Lat1), Dsin(Lat2)), Dmul(Dsin(Lat1), Dmul(Dcos(Lat2), Dcos(Dsub(Lon2, Lon1))))) /= 0)))
IMPLIES
abs(DtoR(azimuth(Lat1, Lon1, Lat2, Lon2)) - azimuth_real(r_Lat1, r_Lon1, r_Lat2, r_Lon2))<=aebounddp_atn_t(((cos(r_Lat2) * sin((r_Lon2 - r_Lon1))) / ((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1)))))), aebounddp_div((cos(r_Lat2) * sin((r_Lon2 - r_Lon1))), aebounddp_mul(cos(r_Lat2), aebounddp_cos(r_Lat2, e_Lat2), sin((r_Lon2 - r_Lon1)), aebounddp_sin((r_Lon2 - r_Lon1), aebounddp_sub(r_Lon2, e_Lon2, r_Lon1, e_Lon1))), ((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))))), aebounddp_sub((cos(r_Lat1) * sin(r_Lat2)), aebounddp_mul(cos(r_Lat1), aebounddp_cos(r_Lat1, e_Lat1), sin(r_Lat2), aebounddp_sin(r_Lat2, e_Lat2)), (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1)))), aebounddp_mul(sin(r_Lat1), aebounddp_sin(r_Lat1, e_Lat1), (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))), aebounddp_mul(cos(r_Lat2), aebounddp_cos(r_Lat2, e_Lat2), cos((r_Lon2 - r_Lon1)), aebounddp_cos((r_Lon2 - r_Lon1), aebounddp_sub(r_Lon2, e_Lon2, r_Lon1, e_Lon1)))))))


%|- azimuth_0: PROOF
%|- (precisa)
%|- QED


% Floating-Point Result: Datan(Ddiv(Dmul(Dcos(Lat2), Dsin(Dsub(Lon2, Lon1))), Dsub(Dmul(Dcos(Lat1), Dsin(Lat2)), Dmul(Dsin(Lat1), Dmul(Dcos(Lat2), Dcos(Dsub(Lon2, Lon1)))))))
% Control Flow: Stable
azimuth_1 : LEMMA
FORALL(e_Lat1, e_Lon1, e_Lat2, e_Lon2: nonneg_real, r_Lat1, r_Lon1, r_Lat2, r_Lon2: real, Lat1: unb_double, Lon1: unb_double, Lat2: unb_double, Lon2: unb_double):
abs(DtoR(Lat1) - r_Lat1)<=e_Lat1 AND abs(DtoR(Lon1) - r_Lon1)<=e_Lon1 AND abs(DtoR(Lat2) - r_Lat2)<=e_Lat2 AND abs(DtoR(Lon2) - r_Lon2)<=e_Lon2
AND ((((((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))))) /= 0) AND (aebounddp_div((cos(r_Lat2) * sin((r_Lon2 - r_Lon1))), aebounddp_mul(cos(r_Lat2), aebounddp_cos(r_Lat2, e_Lat2), sin((r_Lon2 - r_Lon1)), aebounddp_sin((r_Lon2 - r_Lon1), aebounddp_sub(r_Lon2, e_Lon2, r_Lon1, e_Lon1))), ((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))))), aebounddp_sub((cos(r_Lat1) * sin(r_Lat2)), aebounddp_mul(cos(r_Lat1), aebounddp_cos(r_Lat1, e_Lat1), sin(r_Lat2), aebounddp_sin(r_Lat2, e_Lat2)), (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1)))), aebounddp_mul(sin(r_Lat1), aebounddp_sin(r_Lat1, e_Lat1), (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))), aebounddp_mul(cos(r_Lat2), aebounddp_cos(r_Lat2, e_Lat2), cos((r_Lon2 - r_Lon1)), aebounddp_cos((r_Lon2 - r_Lon1), aebounddp_sub(r_Lon2, e_Lon2, r_Lon1, e_Lon1)))))) >= abs(((cos(r_Lat2) * sin((r_Lon2 - r_Lon1))) / ((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))))))))) AND (Dsub(Dmul(Dcos(Lat1), Dsin(Lat2)), Dmul(Dsin(Lat1), Dmul(Dcos(Lat2), Dcos(Dsub(Lon2, Lon1))))) /= 0)))
IMPLIES
abs(DtoR(azimuth(Lat1, Lon1, Lat2, Lon2)) - azimuth_real(r_Lat1, r_Lon1, r_Lat2, r_Lon2))<=aebounddp_atn(((cos(r_Lat2) * sin((r_Lon2 - r_Lon1))) / ((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1)))))), aebounddp_div((cos(r_Lat2) * sin((r_Lon2 - r_Lon1))), aebounddp_mul(cos(r_Lat2), aebounddp_cos(r_Lat2, e_Lat2), sin((r_Lon2 - r_Lon1)), aebounddp_sin((r_Lon2 - r_Lon1), aebounddp_sub(r_Lon2, e_Lon2, r_Lon1, e_Lon1))), ((cos(r_Lat1) * sin(r_Lat2)) - (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))))), aebounddp_sub((cos(r_Lat1) * sin(r_Lat2)), aebounddp_mul(cos(r_Lat1), aebounddp_cos(r_Lat1, e_Lat1), sin(r_Lat2), aebounddp_sin(r_Lat2, e_Lat2)), (sin(r_Lat1) * (cos(r_Lat2) * cos((r_Lon2 - r_Lon1)))), aebounddp_mul(sin(r_Lat1), aebounddp_sin(r_Lat1, e_Lat1), (cos(r_Lat2) * cos((r_Lon2 - r_Lon1))), aebounddp_mul(cos(r_Lat2), aebounddp_cos(r_Lat2, e_Lat2), cos((r_Lon2 - r_Lon1)), aebounddp_cos((r_Lon2 - r_Lon1), aebounddp_sub(r_Lon2, e_Lon2, r_Lon1, e_Lon1)))))))


%|- azimuth_1: PROOF
%|- (precisa)
%|- QED


END azimuth_cert