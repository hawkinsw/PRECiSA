% This file is automatically generated by PRECiSA 

turbine3_cert: THEORY
BEGIN
IMPORTING PRECiSA@strategies, float@aerr754sp, float@aerr754dp, turbine3,turbine3_real

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Result: Dsub(Dsub(3, Dsub(Ddiv(2, Dmul(R, R)), Ddiv(Dmul((1 / 8), Dmul(Dadd(1, Dmul(2, V)), Dmul(Dmul(W, W), Dmul(R, R)))), Dsub(1, V)))), (1 / 2))
% Control Flow: Stable
turbine3_0 : LEMMA
FORALL(e_V, e_W, e_R: nonneg_real, r_V, r_W, r_R: real, V: unb_double, W: unb_double, R: unb_double):
abs(DtoR(V) - r_V)<=e_V AND abs(DtoR(W) - r_W)<=e_W AND abs(DtoR(R) - r_R)<=e_R
AND (((((r_R * r_R) /= 0) AND ((1 - r_V) /= 0)) AND ((Dmul(R, R) /= 0) AND (Dsub(1, V) /= 0))))
IMPLIES
abs(DtoR(turbine3(V, W, R)) - turbine3_real(r_V, r_W, r_R))<=aebounddp_sub((3 - ((2 / (r_R * r_R)) - (((1 / 8) * ((1 + (2 * r_V)) * ((r_W * r_W) * (r_R * r_R)))) / (1 - r_V)))), aebounddp_sub(3, (0 / 1), ((2 / (r_R * r_R)) - (((1 / 8) * ((1 + (2 * r_V)) * ((r_W * r_W) * (r_R * r_R)))) / (1 - r_V))), aebounddp_sub((2 / (r_R * r_R)), aebounddp_div(2, (0 / 1), (r_R * r_R), aebounddp_mul(r_R, e_R, r_R, e_R)), (((1 / 8) * ((1 + (2 * r_V)) * ((r_W * r_W) * (r_R * r_R)))) / (1 - r_V)), aebounddp_div(((1 / 8) * ((1 + (2 * r_V)) * ((r_W * r_W) * (r_R * r_R)))), aebounddp_mul((1 / 8), (0 / 1), ((1 + (2 * r_V)) * ((r_W * r_W) * (r_R * r_R))), aebounddp_mul((1 + (2 * r_V)), aebounddp_add(1, (0 / 1), (2 * r_V), aebounddp_mul(2, (0 / 1), r_V, e_V)), ((r_W * r_W) * (r_R * r_R)), aebounddp_mul((r_W * r_W), aebounddp_mul(r_W, e_W, r_W, e_W), (r_R * r_R), aebounddp_mul(r_R, e_R, r_R, e_R)))), (1 - r_V), aebounddp_sub(1, (0 / 1), r_V, e_V)))), (1 / 2), (0 / 1))


%|- turbine3_0: PROOF
%|- (precisa)
%|- QED


END turbine3_cert