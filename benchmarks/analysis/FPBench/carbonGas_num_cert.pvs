% This file is automatically generated by PRECiSA 

% maxDepth: 7 , prec: 10^-14

carbonGas_num_cert: THEORY
BEGIN
IMPORTING carbonGas_cert, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: LET K:double=round_nearest_even_double((2349054759870519 / 170141183460469231731687303715884105728))
                          IN LET T:double=round_nearest_even_double(300)
                             IN LET A:double=round_nearest_even_double((1805943450575569 / 4503599627370496))
                                IN LET B:double=round_nearest_even_double((6301407775579183 / 147573952589676412928))
                                   IN LET N:double=round_nearest_even_double(1000)
                                      IN LET P:double=round_nearest_even_double(35000000)
                                         IN sub_double(mul_double(add_double(P, mul_double(A, mul_double(div_double(N, V), div_double(N, V)))), sub_double(V, mul_double(N, B))), mul_double(K, mul_double(N, T)))
% Real Results: LET K:real=(2349054759870519 / 170141183460469231731687303715884105728)
                IN LET T:real=300
                   IN LET A:real=(1805943450575569 / 4503599627370496)
                      IN LET B:real=(6301407775579183 / 147573952589676412928)
                         IN LET N:real=1000
                            IN LET P:real=35000000
                               IN (((r_P + (r_A * ((r_N / r_V) * (r_N / r_V)))) * (r_V - (r_N * r_B))) - (r_K * (r_N * r_T)))
% Control Flow:  Stable
carbonGas_c_0 : LEMMA
FORALL(r_V: real, V: double):
abs(safe_prjct_double(V) - r_V)<=ulp_dp(r_V)/2
AND ((((r_V /= 0) AND (r_V /= 0)) AND ((V /= 0) AND (V /= 0))))
AND r_V ## [|0.1,0.5|]
IMPLIES
abs(safe_prjct_double(carbonGas(V)) - carbonGas_real(r_V))<=4288162417421873 / 604462909807314587353088

%|- carbonGas_c_0 : PROOF
%|- (prove-concrete-lemma carbonGas_0 14 7)
%|- QED

END carbonGas_num_cert