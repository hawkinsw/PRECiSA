% This file is automatically generated by PRECiSA 

rigidBody1_cert: THEORY
BEGIN
IMPORTING PRECiSA@strategies, float@aerr754sp, float@aerr754dp, rigidBody1,rigidBody1_real

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Result: Dsub(Dsub(Dsub(Dmul(Dneg(X1), X2), Dmul(2, Dmul(X2, X3))), X1), X3)
% Control Flow: Stable
rigidBody1_0 : LEMMA
FORALL(e_X1, e_X2, e_X3: nonneg_real, r_X1, r_X2, r_X3: real, X1: unb_double, X2: unb_double, X3: unb_double):
abs(DtoR(X1) - r_X1)<=e_X1 AND abs(DtoR(X2) - r_X2)<=e_X2 AND abs(DtoR(X3) - r_X3)<=e_X3
AND ((TRUE AND TRUE))
IMPLIES
abs(DtoR(rigidBody1(X1, X2, X3)) - rigidBody1_real(r_X1, r_X2, r_X3))<=aebounddp_sub((((-(r_X1) * r_X2) - (2 * (r_X2 * r_X3))) - r_X1), aebounddp_sub(((-(r_X1) * r_X2) - (2 * (r_X2 * r_X3))), aebounddp_sub((-(r_X1) * r_X2), aebounddp_mul(-(r_X1), aebounddp_neg(r_X1, e_X1), r_X2, e_X2), (2 * (r_X2 * r_X3)), aebounddp_mul(2, (0 / 1), (r_X2 * r_X3), aebounddp_mul(r_X2, e_X2, r_X3, e_X3))), r_X1, e_X1), r_X3, e_X3)


%|- rigidBody1_0: PROOF
%|- (precisa)
%|- QED


END rigidBody1_cert