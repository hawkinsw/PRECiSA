% This file is automatically generated by PRECiSA 

carbonGas_cert: THEORY
BEGIN
IMPORTING PRECiSA@strategies, float@extended_float_converter, carbonGas,carbonGas_real

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Result: LET K:double=round_nearest_even_double((2349054759870519 / 170141183460469231731687303715884105728))
                         IN LET T:double=round_nearest_even_double(300)
                            IN LET A:double=round_nearest_even_double((1805943450575569 / 4503599627370496))
                               IN LET B:double=round_nearest_even_double((6301407775579183 / 147573952589676412928))
                                  IN LET N:double=round_nearest_even_double(1000)
                                     IN LET P:double=round_nearest_even_double(35000000)
                                        IN sub_double(mul_double(add_double(P, mul_double(A, mul_double(div_double(N, V), div_double(N, V)))), sub_double(V, mul_double(N, B))), mul_double(K, mul_double(N, T)))
% Control Flow: Stable
carbonGas_0 : LEMMA
FORALL(e_V: nonneg_real, r_V: real, V: double):
abs(safe_prjct_double(V) - r_V)<=e_V
AND ((((r_V /= 0) AND (r_V /= 0)) AND ((V /= 0) AND (V /= 0))))
IMPLIES
abs(safe_prjct_double(carbonGas(V)) - carbonGas_real(r_V))<=LET K:real=(2349054759870519 / 170141183460469231731687303715884105728),
                                                                Err_K:real=(0 / 1)
                                                            IN LET T:real=300,
                                                                   Err_T:real=(0 / 1)
                                                               IN LET A:real=(1805943450575569 / 4503599627370496),
                                                                      Err_A:real=(0 / 1)
                                                                  IN LET B:real=(6301407775579183 / 147573952589676412928),
                                                                         Err_B:real=(0 / 1)
                                                                     IN LET N:real=1000,
                                                                            Err_N:real=(0 / 1)
                                                                        IN LET P:real=35000000,
                                                                               Err_P:real=(0 / 1)
                                                                           IN aebounddp_sub(((r_P + (r_A * ((r_N / r_V) * (r_N / r_V)))) * (r_V - (r_N * r_B))), aebounddp_mul((r_P + (r_A * ((r_N / r_V) * (r_N / r_V)))), aebounddp_add(r_P, Err_P, (r_A * ((r_N / r_V) * (r_N / r_V))), aebounddp_mul(r_A, Err_A, ((r_N / r_V) * (r_N / r_V)), aebounddp_mul((r_N / r_V), aebounddp_div(r_N, Err_N, r_V, e_V), (r_N / r_V), aebounddp_div(r_N, Err_N, r_V, e_V)))), (r_V - (r_N * r_B)), aebounddp_sub(r_V, e_V, (r_N * r_B), aebounddp_mul(r_N, Err_N, r_B, Err_B))), (r_K * (r_N * r_T)), aebounddp_mul(r_K, Err_K, (r_N * r_T), aebounddp_mul(r_N, Err_N, r_T, Err_T)))


%|- carbonGas_0: PROOF
%|- (precisa)
%|- QED


END carbonGas_cert