% This file is automatically generated by PRECiSA 

% 2020-05-18 12:35:16.217292 UTC
% maxDepth: 7 , prec: 10^-14

hartman3_num_cert: THEORY
BEGIN
IMPORTING hartman3_cert, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: Dneg(Dadd(Dmul((1 / 1), Dexp(Dneg(Dadd(Dmul((3 / 1), Dmul(Dsub(X1, (103836118908561 / 281474976710656)), Dsub(X1, (103836118908561 / 281474976710656)))), Dadd(Dmul((10 / 1), Dmul(Dsub(X2, (8430738502437569 / 72057594037927936)), Dsub(X2, (8430738502437569 / 72057594037927936)))), Dmul((30 / 1), Dmul(Dsub(X3, (2407624360792267 / 9007199254740992)), Dsub(X3, (2407624360792267 / 9007199254740992))))))))), Dadd(Dmul((5404319552844595 / 4503599627370496), Dexp(Dneg(Dadd(Dmul((3602879701896397 / 36028797018963968), Dmul(Dsub(X1, (529060366225349 / 1125899906842624)), Dsub(X1, (529060366225349 / 1125899906842624)))), Dadd(Dmul((10 / 1), Dmul(Dsub(X2, (3951458313054873 / 9007199254740992)), Dsub(X2, (3951458313054873 / 9007199254740992)))), Dmul((35 / 1), Dmul(Dsub(X3, (6728377843291521 / 9007199254740992)), Dsub(X3, (6728377843291521 / 9007199254740992))))))))), Dadd(Dmul((3 / 1), Dexp(Dneg(Dadd(Dmul((3 / 1), Dmul(Dsub(X1, (3930741754768969 / 36028797018963968)), Dsub(X1, (3930741754768969 / 36028797018963968)))), Dadd(Dmul((10 / 1), Dmul(Dsub(X2, (3932543194619917 / 4503599627370496)), Dsub(X2, (3932543194619917 / 4503599627370496)))), Dmul((30 / 1), Dmul(Dsub(X3, (1249073356651207 / 2251799813685248)), Dsub(X3, (1249073356651207 / 2251799813685248))))))))), Dmul((3602879701896397 / 1125899906842624), Dexp(Dneg(Dadd(Dmul((3602879701896397 / 36028797018963968), Dmul(Dsub(X1, (2748997212546951 / 72057594037927936)), Dsub(X1, (2748997212546951 / 72057594037927936)))), Dadd(Dmul((10 / 1), Dmul(Dsub(X2, (646604316499719 / 1125899906842624)), Dsub(X2, (646604316499719 / 1125899906842624)))), Dmul((35 / 1), Dmul(Dsub(X3, (1987888875521337 / 2251799813685248)), Dsub(X3, (1987888875521337 / 2251799813685248)))))))))))))
% Real Results: -((((1 / 1) * exp(-((((3 / 1) * ((r_X1 - (103836118908561 / 281474976710656)) * (r_X1 - (103836118908561 / 281474976710656)))) + (((10 / 1) * ((r_X2 - (8430738502437569 / 72057594037927936)) * (r_X2 - (8430738502437569 / 72057594037927936)))) + ((30 / 1) * ((r_X3 - (2407624360792267 / 9007199254740992)) * (r_X3 - (2407624360792267 / 9007199254740992))))))))) + (((5404319552844595 / 4503599627370496) * exp(-((((3602879701896397 / 36028797018963968) * ((r_X1 - (529060366225349 / 1125899906842624)) * (r_X1 - (529060366225349 / 1125899906842624)))) + (((10 / 1) * ((r_X2 - (3951458313054873 / 9007199254740992)) * (r_X2 - (3951458313054873 / 9007199254740992)))) + ((35 / 1) * ((r_X3 - (6728377843291521 / 9007199254740992)) * (r_X3 - (6728377843291521 / 9007199254740992))))))))) + (((3 / 1) * exp(-((((3 / 1) * ((r_X1 - (3930741754768969 / 36028797018963968)) * (r_X1 - (3930741754768969 / 36028797018963968)))) + (((10 / 1) * ((r_X2 - (3932543194619917 / 4503599627370496)) * (r_X2 - (3932543194619917 / 4503599627370496)))) + ((30 / 1) * ((r_X3 - (1249073356651207 / 2251799813685248)) * (r_X3 - (1249073356651207 / 2251799813685248))))))))) + ((3602879701896397 / 1125899906842624) * exp(-((((3602879701896397 / 36028797018963968) * ((r_X1 - (2748997212546951 / 72057594037927936)) * (r_X1 - (2748997212546951 / 72057594037927936)))) + (((10 / 1) * ((r_X2 - (646604316499719 / 1125899906842624)) * (r_X2 - (646604316499719 / 1125899906842624)))) + ((35 / 1) * ((r_X3 - (1987888875521337 / 2251799813685248)) * (r_X3 - (1987888875521337 / 2251799813685248)))))))))))))
% Control Flow:  Stable
hartman3_c_0 : LEMMA
FORALL(r_X1, r_X2, r_X3: real, X1: unb_double, X2: unb_double, X3: unb_double):
abs(DtoR(X1) - r_X1)<=ulp_dp(r_X1)/2 AND abs(DtoR(X2) - r_X2)<=ulp_dp(r_X2)/2 AND abs(DtoR(X3) - r_X3)<=ulp_dp(r_X3)/2
AND ((TRUE AND TRUE))
AND r_X1 ## [|0,1|] AND  r_X2 ## [|0,1|] AND  r_X3 ## [|0,1|]
IMPLIES
abs(DtoR(hartman3(X1, X2, X3)) - hartman3_real(r_X1, r_X2, r_X3))<=53346252801989 / 2475880078570760549798248448

%|- hartman3_c_0 : PROOF
%|- (prove-concrete-lemma hartman3_0 14 7)
%|- QED

END hartman3_num_cert