% This file is automatically generated by PRECiSA 
% maxDepth: 4 , prec: 10^-14 , displayPrec: 2

clgen_div_double: THEORY
BEGIN

IMPORTING PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@precIOsa,  PRECiSA@strategies  

div_double_r_X, div_double_r_Y: real

f_0_aeexpr : string = "aebounddp_div(div_double_r_X, ulp_dp(div_double_r_X)/2, div_double_r_Y, ulp_dp(div_double_r_Y)/2)"

f_0_lemma_str : string = "f_c_0 : LEMMA~%FORALL(div_double_r_X, div_double_r_Y: real, X, Y: unb_double):~%abs(DtoR(X) - div_double_r_X)<=ulp_dp(div_double_r_X)/2 AND abs(DtoR(Y) - div_double_r_Y)<=ulp_dp(div_double_r_Y)/2~%AND (((div_double_r_Y /= 0) AND (DtoR(Y) /= 0)) AND (((div_double_r_Y + ulp_dp(div_double_r_Y)/2) < 0) OR ((div_double_r_Y - ulp_dp(div_double_r_Y)/2) > 0)))~%AND TRUE~%AND div_double_r_X ## [|1,10|] AND  div_double_r_Y ## [|1,7|]~%IMPLIES~%abs(DtoR(f(X, Y)) - (div_double_r_X / div_double_r_Y))<= ~a~%"
                          
gen(sout: OStream, ranges:list[[string,ProperInterval]], maxdepth:nat, prec:posreal, displayprec:nat): void =
LET
max  :real = 0,
dummy:void = fprintf (sout, "% This file is automatically generated by PRECiSA ~%"),
dummy:void = fprintf (sout, "clemmas_div_double: THEORY ~%"),
dummy:void = fprintf (sout, "BEGIN ~%"),
dummy:void = fprintf (sout, "IMPORTING cert_div_double, PRECiSA@bbiasp, PRECiSA@bbiadp ~%"),
dummy:void = fprintf (sout, "~%%|- *_TCC* : PROOF"),
dummy:void = fprintf (sout, "~%%|- (precisa-gen-cert-tcc)"),
dummy:void = fprintf (sout, "~%%|- QED~%~%"),
dummy:void = printf ("Concrete bounds: ~%"),new  :real = fprint_concrete_lemma (sout)(f_0_lemma_str, f_0_aeexpr, ranges, maxdepth, prec) ,
max  :real = IF(new>max) THEN new ELSE max ENDIF,
dummy:void = fprint_proof (sout)("f_0", "f_c_0") ,
dummy:void = printf(" - lemma ~a: ~-20/pvs:d/~%",("f_0",new)),
dummy:void = fprintf (sout, "END clemmas_div_double ~%")IN
printf("Overall concrete bound: ~-20/pvs:d/~%",max)
main : void = 
LET sout = fopenout(create, "clemmas_div_double.pvs"),
i1:ProperInterval = [|1,10|],
i2:ProperInterval = [|1,7|] IN 
gen (sout, (: ("div_double_r_X",i1), ("div_double_r_Y",i2) :), 4, 10^-14, 2) & fclose(sout) & printf("File succesfully generated.")

END clgen_div_double