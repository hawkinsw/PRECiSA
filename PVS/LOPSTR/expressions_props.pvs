expressions_props[
  Operator	      : TYPE+,
  RealNumber          : TYPE+,
  FloatingPointNumber : TYPE+,
  FtoR 		      : [FloatingPointNumber -> RealNumber]
]: THEORY BEGIN

  IMPORTING program[Operator,RealNumber,FloatingPointNumber,FtoR]

  well_formed_ITE_propagation : LEMMA
    FORALL(phi: FPBExpr,A,B: FPStmt, nargs,nlocals: nat):
      wellFormed?(ITE(phi, A, B), nargs,nlocals)
      IMPLIES
      (
        wellFormed?(A, nargs, nlocals)
        AND
        wellFormed?(B, nargs, nlocals)
      )

  well_formed_LETIN_propagation : LEMMA
    FORALL(expr: FPAExpr,subSmt: FPStmt, nargs,nlocals: nat):
      wellFormed?(LETIN(expr, subSmt),nargs,nlocals)
      IMPLIES
        wellFormed?(expr, nargs, nlocals) AND
        wellFormed?(subSmt, nargs, nlocals+1)

  well_formed_op_propagation : LEMMA
    FORALL(op: Operator, A,B: FPAExpr, nargs,nlocals: nat):
      wellFormed?(AEXPR(FPOperator(op, A, B)), nargs,nlocals)
      IMPLIES
      (
        wellFormed?(AEXPR(A), nargs,nlocals)
        AND
        wellFormed?(AEXPR(B), nargs,nlocals)
      )

END expressions_props
