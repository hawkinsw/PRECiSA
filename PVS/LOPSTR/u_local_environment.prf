(u_local_environment
 (size_cons_TCC1 0
  (size_cons_TCC1-1 nil 3755688247 ("" (subtype-tcc) nil nil) nil nil))
 (shrink_env_monotonocity_TCC1 0
  (shrink_env_monotonocity_TCC1-1 nil 3754153436
   ("" (subtype-tcc) nil nil)
   ((size_cons_def formula-decl nil u_local_environment nil)) nil))
 (shrink_env_monotonocity_TCC2 0
  (shrink_env_monotonocity_TCC2-1 nil 3754410767
   ("" (subtype-tcc) nil nil) nil nil))
 (shrink_for_last_added_TCC1 0
  (shrink_for_last_added_TCC1-1 nil 3754153436 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (LocalEnvironment nonempty-type-decl nil u_local_environment nil)
    (T formal-nonempty-type-decl nil u_local_environment nil)
    (bounded_by? const-decl "bool" u_local_environment nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (size_cons_def formula-decl nil u_local_environment nil))
   nil))
 (u_local_environment_extensionality_TCC1 0
  (u_local_environment_extensionality_TCC1-1 nil 3756212618
   ("" (subtype-tcc) nil nil)
   ((below type-eq-decl nil naturalnumbers nil)
    (size const-decl "nat" u_local_environment nil)
    (LocalEnvironment nonempty-type-decl nil u_local_environment nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (get_shrink_TCC1 0
  (get_shrink_TCC1-1 nil 3756574770
   ("" (skeep :preds? t)
    (("" (rewrite "size_shrink") (("" (grind) nil nil)) nil)) nil)
   ((size_shrink formula-decl nil u_local_environment nil)
    (LocalEnvironment nonempty-type-decl nil u_local_environment nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (size const-decl "nat" u_local_environment nil)
    (below type-eq-decl nil naturalnumbers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (env_cons_eta_TCC1 0
  (env_cons_eta_TCC1-1 nil 3757697027 ("" (subtype-tcc) nil nil) nil
   nil))
 (env_cons_eta_TCC2 0
  (env_cons_eta_TCC2-1 nil 3757697027
   ("" (skeep* :preds? t)
    (("" (use "local_definitions_are_evaluable_in_smaller_env") nil
      nil))
    nil)
   ((below type-eq-decl nil naturalnumbers nil)
    (size const-decl "nat" u_local_environment nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (LocalEnvironment nonempty-type-decl nil u_local_environment nil)
    (local_definitions_are_evaluable_in_smaller_env formula-decl nil
     u_local_environment nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil))
 (lenv_induction_TCC1 0
  (lenv_induction_TCC1-1 nil 3757697027 ("" (subtype-tcc) nil nil) nil
   nil)))

